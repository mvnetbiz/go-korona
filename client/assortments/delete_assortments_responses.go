// Code generated by go-swagger; DO NOT EDIT.

package assortments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteAssortmentsReader is a Reader for the DeleteAssortments structure.
type DeleteAssortmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAssortmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAssortmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAssortmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAssortmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAssortmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAssortmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAssortmentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAssortmentsOK creates a DeleteAssortmentsOK with default headers values
func NewDeleteAssortmentsOK() *DeleteAssortmentsOK {
	return &DeleteAssortmentsOK{}
}

/*DeleteAssortmentsOK handles this case with default header values.

successful operation
*/
type DeleteAssortmentsOK struct {
	Payload []*models.AddOrUpdateResult
}

func (o *DeleteAssortmentsOK) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments][%d] deleteAssortmentsOK  %+v", 200, o.Payload)
}

func (o *DeleteAssortmentsOK) GetPayload() []*models.AddOrUpdateResult {
	return o.Payload
}

func (o *DeleteAssortmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentsBadRequest creates a DeleteAssortmentsBadRequest with default headers values
func NewDeleteAssortmentsBadRequest() *DeleteAssortmentsBadRequest {
	return &DeleteAssortmentsBadRequest{}
}

/*DeleteAssortmentsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteAssortmentsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteAssortmentsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments][%d] deleteAssortmentsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAssortmentsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteAssortmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentsUnauthorized creates a DeleteAssortmentsUnauthorized with default headers values
func NewDeleteAssortmentsUnauthorized() *DeleteAssortmentsUnauthorized {
	return &DeleteAssortmentsUnauthorized{}
}

/*DeleteAssortmentsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteAssortmentsUnauthorized struct {
}

func (o *DeleteAssortmentsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments][%d] deleteAssortmentsUnauthorized ", 401)
}

func (o *DeleteAssortmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssortmentsForbidden creates a DeleteAssortmentsForbidden with default headers values
func NewDeleteAssortmentsForbidden() *DeleteAssortmentsForbidden {
	return &DeleteAssortmentsForbidden{}
}

/*DeleteAssortmentsForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteAssortmentsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteAssortmentsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments][%d] deleteAssortmentsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAssortmentsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteAssortmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentsNotFound creates a DeleteAssortmentsNotFound with default headers values
func NewDeleteAssortmentsNotFound() *DeleteAssortmentsNotFound {
	return &DeleteAssortmentsNotFound{}
}

/*DeleteAssortmentsNotFound handles this case with default header values.

Object not found
*/
type DeleteAssortmentsNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteAssortmentsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments][%d] deleteAssortmentsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAssortmentsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteAssortmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentsTooManyRequests creates a DeleteAssortmentsTooManyRequests with default headers values
func NewDeleteAssortmentsTooManyRequests() *DeleteAssortmentsTooManyRequests {
	return &DeleteAssortmentsTooManyRequests{}
}

/*DeleteAssortmentsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteAssortmentsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteAssortmentsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments][%d] deleteAssortmentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAssortmentsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteAssortmentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
