// Code generated by go-swagger; DO NOT EDIT.

package assortments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteAssortmentReader is a Reader for the DeleteAssortment structure.
type DeleteAssortmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAssortmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAssortmentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAssortmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAssortmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAssortmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAssortmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAssortmentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAssortmentNoContent creates a DeleteAssortmentNoContent with default headers values
func NewDeleteAssortmentNoContent() *DeleteAssortmentNoContent {
	return &DeleteAssortmentNoContent{}
}

/*DeleteAssortmentNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type DeleteAssortmentNoContent struct {
}

func (o *DeleteAssortmentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments/{assortmentId}][%d] deleteAssortmentNoContent ", 204)
}

func (o *DeleteAssortmentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssortmentBadRequest creates a DeleteAssortmentBadRequest with default headers values
func NewDeleteAssortmentBadRequest() *DeleteAssortmentBadRequest {
	return &DeleteAssortmentBadRequest{}
}

/*DeleteAssortmentBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteAssortmentBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteAssortmentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments/{assortmentId}][%d] deleteAssortmentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAssortmentBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteAssortmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentUnauthorized creates a DeleteAssortmentUnauthorized with default headers values
func NewDeleteAssortmentUnauthorized() *DeleteAssortmentUnauthorized {
	return &DeleteAssortmentUnauthorized{}
}

/*DeleteAssortmentUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteAssortmentUnauthorized struct {
}

func (o *DeleteAssortmentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments/{assortmentId}][%d] deleteAssortmentUnauthorized ", 401)
}

func (o *DeleteAssortmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssortmentForbidden creates a DeleteAssortmentForbidden with default headers values
func NewDeleteAssortmentForbidden() *DeleteAssortmentForbidden {
	return &DeleteAssortmentForbidden{}
}

/*DeleteAssortmentForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteAssortmentForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteAssortmentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments/{assortmentId}][%d] deleteAssortmentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAssortmentForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteAssortmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentNotFound creates a DeleteAssortmentNotFound with default headers values
func NewDeleteAssortmentNotFound() *DeleteAssortmentNotFound {
	return &DeleteAssortmentNotFound{}
}

/*DeleteAssortmentNotFound handles this case with default header values.

Object not found
*/
type DeleteAssortmentNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteAssortmentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments/{assortmentId}][%d] deleteAssortmentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAssortmentNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteAssortmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAssortmentTooManyRequests creates a DeleteAssortmentTooManyRequests with default headers values
func NewDeleteAssortmentTooManyRequests() *DeleteAssortmentTooManyRequests {
	return &DeleteAssortmentTooManyRequests{}
}

/*DeleteAssortmentTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteAssortmentTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteAssortmentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/assortments/{assortmentId}][%d] deleteAssortmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAssortmentTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteAssortmentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
