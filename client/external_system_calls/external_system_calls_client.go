// Code generated by go-swagger; DO NOT EDIT.

package external_system_calls

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new external system calls API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for external system calls API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AddExternalSystemCalls(params *AddExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*AddExternalSystemCallsOK, error)

	DeleteExternalSystemCall(params *DeleteExternalSystemCallParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteExternalSystemCallNoContent, error)

	DeleteExternalSystemCalls(params *DeleteExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteExternalSystemCallsOK, error)

	GetExternalSystemCall(params *GetExternalSystemCallParams, authInfo runtime.ClientAuthInfoWriter) (*GetExternalSystemCallOK, error)

	GetExternalSystemCalls(params *GetExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*GetExternalSystemCallsOK, error)

	UpdateExternalSystemCall(params *UpdateExternalSystemCallParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateExternalSystemCallNoContent, error)

	UpdateExternalSystemCalls(params *UpdateExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateExternalSystemCallsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AddExternalSystemCalls adds a batch of new external system calls
*/
func (a *Client) AddExternalSystemCalls(params *AddExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*AddExternalSystemCallsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddExternalSystemCallsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "addExternalSystemCalls",
		Method:             "POST",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AddExternalSystemCallsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddExternalSystemCallsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for addExternalSystemCalls: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteExternalSystemCall deletes a single external system call
*/
func (a *Client) DeleteExternalSystemCall(params *DeleteExternalSystemCallParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteExternalSystemCallNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteExternalSystemCallParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteExternalSystemCall",
		Method:             "DELETE",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteExternalSystemCallReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteExternalSystemCallNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteExternalSystemCall: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteExternalSystemCalls deletes a batch of external system calls
*/
func (a *Client) DeleteExternalSystemCalls(params *DeleteExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteExternalSystemCallsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteExternalSystemCallsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteExternalSystemCalls",
		Method:             "DELETE",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteExternalSystemCallsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteExternalSystemCallsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteExternalSystemCalls: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetExternalSystemCall returns a single external system call
*/
func (a *Client) GetExternalSystemCall(params *GetExternalSystemCallParams, authInfo runtime.ClientAuthInfoWriter) (*GetExternalSystemCallOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetExternalSystemCallParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getExternalSystemCall",
		Method:             "GET",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetExternalSystemCallReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetExternalSystemCallOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getExternalSystemCall: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetExternalSystemCalls lists all external system calls
*/
func (a *Client) GetExternalSystemCalls(params *GetExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*GetExternalSystemCallsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetExternalSystemCallsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getExternalSystemCalls",
		Method:             "GET",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetExternalSystemCallsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetExternalSystemCallsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getExternalSystemCalls: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateExternalSystemCall updates the single external system call
*/
func (a *Client) UpdateExternalSystemCall(params *UpdateExternalSystemCallParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateExternalSystemCallNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateExternalSystemCallParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateExternalSystemCall",
		Method:             "PATCH",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateExternalSystemCallReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateExternalSystemCallNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateExternalSystemCall: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateExternalSystemCalls updates a batch of external system calls
*/
func (a *Client) UpdateExternalSystemCalls(params *UpdateExternalSystemCallsParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateExternalSystemCallsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateExternalSystemCallsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateExternalSystemCalls",
		Method:             "PATCH",
		PathPattern:        "/accounts/{koronaAccountId}/externalSystemCalls",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateExternalSystemCallsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateExternalSystemCallsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateExternalSystemCalls: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
