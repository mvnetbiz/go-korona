// Code generated by go-swagger; DO NOT EDIT.

package customer_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetCustomerGroupsReader is a Reader for the GetCustomerGroups structure.
type GetCustomerGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomerGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomerGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetCustomerGroupsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomerGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCustomerGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomerGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomerGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomerGroupsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomerGroupsOK creates a GetCustomerGroupsOK with default headers values
func NewGetCustomerGroupsOK() *GetCustomerGroupsOK {
	return &GetCustomerGroupsOK{}
}

/*GetCustomerGroupsOK handles this case with default header values.

successful operation
*/
type GetCustomerGroupsOK struct {
	Payload *models.ResultListCustomerGroup
}

func (o *GetCustomerGroupsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsOK  %+v", 200, o.Payload)
}

func (o *GetCustomerGroupsOK) GetPayload() *models.ResultListCustomerGroup {
	return o.Payload
}

func (o *GetCustomerGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListCustomerGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupsNoContent creates a GetCustomerGroupsNoContent with default headers values
func NewGetCustomerGroupsNoContent() *GetCustomerGroupsNoContent {
	return &GetCustomerGroupsNoContent{}
}

/*GetCustomerGroupsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetCustomerGroupsNoContent struct {
}

func (o *GetCustomerGroupsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsNoContent ", 204)
}

func (o *GetCustomerGroupsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomerGroupsBadRequest creates a GetCustomerGroupsBadRequest with default headers values
func NewGetCustomerGroupsBadRequest() *GetCustomerGroupsBadRequest {
	return &GetCustomerGroupsBadRequest{}
}

/*GetCustomerGroupsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetCustomerGroupsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCustomerGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomerGroupsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCustomerGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupsUnauthorized creates a GetCustomerGroupsUnauthorized with default headers values
func NewGetCustomerGroupsUnauthorized() *GetCustomerGroupsUnauthorized {
	return &GetCustomerGroupsUnauthorized{}
}

/*GetCustomerGroupsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetCustomerGroupsUnauthorized struct {
}

func (o *GetCustomerGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsUnauthorized ", 401)
}

func (o *GetCustomerGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomerGroupsForbidden creates a GetCustomerGroupsForbidden with default headers values
func NewGetCustomerGroupsForbidden() *GetCustomerGroupsForbidden {
	return &GetCustomerGroupsForbidden{}
}

/*GetCustomerGroupsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetCustomerGroupsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetCustomerGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomerGroupsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetCustomerGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupsNotFound creates a GetCustomerGroupsNotFound with default headers values
func NewGetCustomerGroupsNotFound() *GetCustomerGroupsNotFound {
	return &GetCustomerGroupsNotFound{}
}

/*GetCustomerGroupsNotFound handles this case with default header values.

Object not found
*/
type GetCustomerGroupsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCustomerGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomerGroupsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCustomerGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupsTooManyRequests creates a GetCustomerGroupsTooManyRequests with default headers values
func NewGetCustomerGroupsTooManyRequests() *GetCustomerGroupsTooManyRequests {
	return &GetCustomerGroupsTooManyRequests{}
}

/*GetCustomerGroupsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetCustomerGroupsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetCustomerGroupsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups][%d] getCustomerGroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCustomerGroupsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetCustomerGroupsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
