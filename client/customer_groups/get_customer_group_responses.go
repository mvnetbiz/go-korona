// Code generated by go-swagger; DO NOT EDIT.

package customer_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetCustomerGroupReader is a Reader for the GetCustomerGroup structure.
type GetCustomerGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomerGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomerGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomerGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCustomerGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomerGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomerGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomerGroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomerGroupOK creates a GetCustomerGroupOK with default headers values
func NewGetCustomerGroupOK() *GetCustomerGroupOK {
	return &GetCustomerGroupOK{}
}

/*GetCustomerGroupOK handles this case with default header values.

successful operation
*/
type GetCustomerGroupOK struct {
	Payload *models.CustomerGroup
}

func (o *GetCustomerGroupOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups/{customerGroupId}][%d] getCustomerGroupOK  %+v", 200, o.Payload)
}

func (o *GetCustomerGroupOK) GetPayload() *models.CustomerGroup {
	return o.Payload
}

func (o *GetCustomerGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupBadRequest creates a GetCustomerGroupBadRequest with default headers values
func NewGetCustomerGroupBadRequest() *GetCustomerGroupBadRequest {
	return &GetCustomerGroupBadRequest{}
}

/*GetCustomerGroupBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetCustomerGroupBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCustomerGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups/{customerGroupId}][%d] getCustomerGroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomerGroupBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCustomerGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupUnauthorized creates a GetCustomerGroupUnauthorized with default headers values
func NewGetCustomerGroupUnauthorized() *GetCustomerGroupUnauthorized {
	return &GetCustomerGroupUnauthorized{}
}

/*GetCustomerGroupUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetCustomerGroupUnauthorized struct {
}

func (o *GetCustomerGroupUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups/{customerGroupId}][%d] getCustomerGroupUnauthorized ", 401)
}

func (o *GetCustomerGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomerGroupForbidden creates a GetCustomerGroupForbidden with default headers values
func NewGetCustomerGroupForbidden() *GetCustomerGroupForbidden {
	return &GetCustomerGroupForbidden{}
}

/*GetCustomerGroupForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetCustomerGroupForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetCustomerGroupForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups/{customerGroupId}][%d] getCustomerGroupForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomerGroupForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetCustomerGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupNotFound creates a GetCustomerGroupNotFound with default headers values
func NewGetCustomerGroupNotFound() *GetCustomerGroupNotFound {
	return &GetCustomerGroupNotFound{}
}

/*GetCustomerGroupNotFound handles this case with default header values.

Object not found
*/
type GetCustomerGroupNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCustomerGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups/{customerGroupId}][%d] getCustomerGroupNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomerGroupNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCustomerGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerGroupTooManyRequests creates a GetCustomerGroupTooManyRequests with default headers values
func NewGetCustomerGroupTooManyRequests() *GetCustomerGroupTooManyRequests {
	return &GetCustomerGroupTooManyRequests{}
}

/*GetCustomerGroupTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetCustomerGroupTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetCustomerGroupTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customerGroups/{customerGroupId}][%d] getCustomerGroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCustomerGroupTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetCustomerGroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
