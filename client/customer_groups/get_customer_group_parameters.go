// Code generated by go-swagger; DO NOT EDIT.

package customer_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetCustomerGroupParams creates a new GetCustomerGroupParams object
// with the default values initialized.
func NewGetCustomerGroupParams() *GetCustomerGroupParams {
	var ()
	return &GetCustomerGroupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCustomerGroupParamsWithTimeout creates a new GetCustomerGroupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCustomerGroupParamsWithTimeout(timeout time.Duration) *GetCustomerGroupParams {
	var ()
	return &GetCustomerGroupParams{

		timeout: timeout,
	}
}

// NewGetCustomerGroupParamsWithContext creates a new GetCustomerGroupParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCustomerGroupParamsWithContext(ctx context.Context) *GetCustomerGroupParams {
	var ()
	return &GetCustomerGroupParams{

		Context: ctx,
	}
}

// NewGetCustomerGroupParamsWithHTTPClient creates a new GetCustomerGroupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCustomerGroupParamsWithHTTPClient(client *http.Client) *GetCustomerGroupParams {
	var ()
	return &GetCustomerGroupParams{
		HTTPClient: client,
	}
}

/*GetCustomerGroupParams contains all the parameters to send to the API endpoint
for the get customer group operation typically these are written to a http.Request
*/
type GetCustomerGroupParams struct {

	/*CustomerGroupID
	  id of the related object (important: id should match the uuid-format)

	*/
	CustomerGroupID string
	/*KoronaAccountID
	  account id of the KORONA.cloud account

	*/
	KoronaAccountID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get customer group params
func (o *GetCustomerGroupParams) WithTimeout(timeout time.Duration) *GetCustomerGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get customer group params
func (o *GetCustomerGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get customer group params
func (o *GetCustomerGroupParams) WithContext(ctx context.Context) *GetCustomerGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get customer group params
func (o *GetCustomerGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get customer group params
func (o *GetCustomerGroupParams) WithHTTPClient(client *http.Client) *GetCustomerGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get customer group params
func (o *GetCustomerGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerGroupID adds the customerGroupID to the get customer group params
func (o *GetCustomerGroupParams) WithCustomerGroupID(customerGroupID string) *GetCustomerGroupParams {
	o.SetCustomerGroupID(customerGroupID)
	return o
}

// SetCustomerGroupID adds the customerGroupId to the get customer group params
func (o *GetCustomerGroupParams) SetCustomerGroupID(customerGroupID string) {
	o.CustomerGroupID = customerGroupID
}

// WithKoronaAccountID adds the koronaAccountID to the get customer group params
func (o *GetCustomerGroupParams) WithKoronaAccountID(koronaAccountID string) *GetCustomerGroupParams {
	o.SetKoronaAccountID(koronaAccountID)
	return o
}

// SetKoronaAccountID adds the koronaAccountId to the get customer group params
func (o *GetCustomerGroupParams) SetKoronaAccountID(koronaAccountID string) {
	o.KoronaAccountID = koronaAccountID
}

// WriteToRequest writes these params to a swagger request
func (o *GetCustomerGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerGroupId
	if err := r.SetPathParam("customerGroupId", o.CustomerGroupID); err != nil {
		return err
	}

	// path param koronaAccountId
	if err := r.SetPathParam("koronaAccountId", o.KoronaAccountID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
