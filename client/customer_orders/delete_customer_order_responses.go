// Code generated by go-swagger; DO NOT EDIT.

package customer_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteCustomerOrderReader is a Reader for the DeleteCustomerOrder structure.
type DeleteCustomerOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCustomerOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCustomerOrderNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCustomerOrderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCustomerOrderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCustomerOrderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCustomerOrderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteCustomerOrderTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCustomerOrderNoContent creates a DeleteCustomerOrderNoContent with default headers values
func NewDeleteCustomerOrderNoContent() *DeleteCustomerOrderNoContent {
	return &DeleteCustomerOrderNoContent{}
}

/*DeleteCustomerOrderNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type DeleteCustomerOrderNoContent struct {
}

func (o *DeleteCustomerOrderNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/customerOrders/{customerOrderId}][%d] deleteCustomerOrderNoContent ", 204)
}

func (o *DeleteCustomerOrderNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomerOrderBadRequest creates a DeleteCustomerOrderBadRequest with default headers values
func NewDeleteCustomerOrderBadRequest() *DeleteCustomerOrderBadRequest {
	return &DeleteCustomerOrderBadRequest{}
}

/*DeleteCustomerOrderBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteCustomerOrderBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteCustomerOrderBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/customerOrders/{customerOrderId}][%d] deleteCustomerOrderBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCustomerOrderBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteCustomerOrderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerOrderUnauthorized creates a DeleteCustomerOrderUnauthorized with default headers values
func NewDeleteCustomerOrderUnauthorized() *DeleteCustomerOrderUnauthorized {
	return &DeleteCustomerOrderUnauthorized{}
}

/*DeleteCustomerOrderUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteCustomerOrderUnauthorized struct {
}

func (o *DeleteCustomerOrderUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/customerOrders/{customerOrderId}][%d] deleteCustomerOrderUnauthorized ", 401)
}

func (o *DeleteCustomerOrderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomerOrderForbidden creates a DeleteCustomerOrderForbidden with default headers values
func NewDeleteCustomerOrderForbidden() *DeleteCustomerOrderForbidden {
	return &DeleteCustomerOrderForbidden{}
}

/*DeleteCustomerOrderForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteCustomerOrderForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteCustomerOrderForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/customerOrders/{customerOrderId}][%d] deleteCustomerOrderForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCustomerOrderForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteCustomerOrderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerOrderNotFound creates a DeleteCustomerOrderNotFound with default headers values
func NewDeleteCustomerOrderNotFound() *DeleteCustomerOrderNotFound {
	return &DeleteCustomerOrderNotFound{}
}

/*DeleteCustomerOrderNotFound handles this case with default header values.

Object not found
*/
type DeleteCustomerOrderNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteCustomerOrderNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/customerOrders/{customerOrderId}][%d] deleteCustomerOrderNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCustomerOrderNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteCustomerOrderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerOrderTooManyRequests creates a DeleteCustomerOrderTooManyRequests with default headers values
func NewDeleteCustomerOrderTooManyRequests() *DeleteCustomerOrderTooManyRequests {
	return &DeleteCustomerOrderTooManyRequests{}
}

/*DeleteCustomerOrderTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteCustomerOrderTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteCustomerOrderTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/customerOrders/{customerOrderId}][%d] deleteCustomerOrderTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteCustomerOrderTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteCustomerOrderTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
