// Code generated by go-swagger; DO NOT EDIT.

package customer_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// AddCustomerOrdersReader is a Reader for the AddCustomerOrders structure.
type AddCustomerOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddCustomerOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddCustomerOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddCustomerOrdersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddCustomerOrdersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddCustomerOrdersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddCustomerOrdersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddCustomerOrdersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddCustomerOrdersOK creates a AddCustomerOrdersOK with default headers values
func NewAddCustomerOrdersOK() *AddCustomerOrdersOK {
	return &AddCustomerOrdersOK{}
}

/*AddCustomerOrdersOK handles this case with default header values.

successful operation
*/
type AddCustomerOrdersOK struct {
	Payload []*models.AddOrUpdateResult
}

func (o *AddCustomerOrdersOK) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/customerOrders][%d] addCustomerOrdersOK  %+v", 200, o.Payload)
}

func (o *AddCustomerOrdersOK) GetPayload() []*models.AddOrUpdateResult {
	return o.Payload
}

func (o *AddCustomerOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCustomerOrdersBadRequest creates a AddCustomerOrdersBadRequest with default headers values
func NewAddCustomerOrdersBadRequest() *AddCustomerOrdersBadRequest {
	return &AddCustomerOrdersBadRequest{}
}

/*AddCustomerOrdersBadRequest handles this case with default header values.

Malformed querystring or model
*/
type AddCustomerOrdersBadRequest struct {
	Payload *models.BadRequestError
}

func (o *AddCustomerOrdersBadRequest) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/customerOrders][%d] addCustomerOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *AddCustomerOrdersBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *AddCustomerOrdersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCustomerOrdersUnauthorized creates a AddCustomerOrdersUnauthorized with default headers values
func NewAddCustomerOrdersUnauthorized() *AddCustomerOrdersUnauthorized {
	return &AddCustomerOrdersUnauthorized{}
}

/*AddCustomerOrdersUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type AddCustomerOrdersUnauthorized struct {
}

func (o *AddCustomerOrdersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/customerOrders][%d] addCustomerOrdersUnauthorized ", 401)
}

func (o *AddCustomerOrdersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddCustomerOrdersForbidden creates a AddCustomerOrdersForbidden with default headers values
func NewAddCustomerOrdersForbidden() *AddCustomerOrdersForbidden {
	return &AddCustomerOrdersForbidden{}
}

/*AddCustomerOrdersForbidden handles this case with default header values.

Requested action is not allowed
*/
type AddCustomerOrdersForbidden struct {
	Payload *models.ForbiddenError
}

func (o *AddCustomerOrdersForbidden) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/customerOrders][%d] addCustomerOrdersForbidden  %+v", 403, o.Payload)
}

func (o *AddCustomerOrdersForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *AddCustomerOrdersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCustomerOrdersNotFound creates a AddCustomerOrdersNotFound with default headers values
func NewAddCustomerOrdersNotFound() *AddCustomerOrdersNotFound {
	return &AddCustomerOrdersNotFound{}
}

/*AddCustomerOrdersNotFound handles this case with default header values.

Object not found
*/
type AddCustomerOrdersNotFound struct {
	Payload *models.NotFoundError
}

func (o *AddCustomerOrdersNotFound) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/customerOrders][%d] addCustomerOrdersNotFound  %+v", 404, o.Payload)
}

func (o *AddCustomerOrdersNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *AddCustomerOrdersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCustomerOrdersTooManyRequests creates a AddCustomerOrdersTooManyRequests with default headers values
func NewAddCustomerOrdersTooManyRequests() *AddCustomerOrdersTooManyRequests {
	return &AddCustomerOrdersTooManyRequests{}
}

/*AddCustomerOrdersTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type AddCustomerOrdersTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *AddCustomerOrdersTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/customerOrders][%d] addCustomerOrdersTooManyRequests  %+v", 429, o.Payload)
}

func (o *AddCustomerOrdersTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *AddCustomerOrdersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
