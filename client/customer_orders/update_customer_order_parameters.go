// Code generated by go-swagger; DO NOT EDIT.

package customer_orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// NewUpdateCustomerOrderParams creates a new UpdateCustomerOrderParams object
// with the default values initialized.
func NewUpdateCustomerOrderParams() *UpdateCustomerOrderParams {
	var ()
	return &UpdateCustomerOrderParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCustomerOrderParamsWithTimeout creates a new UpdateCustomerOrderParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateCustomerOrderParamsWithTimeout(timeout time.Duration) *UpdateCustomerOrderParams {
	var ()
	return &UpdateCustomerOrderParams{

		timeout: timeout,
	}
}

// NewUpdateCustomerOrderParamsWithContext creates a new UpdateCustomerOrderParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateCustomerOrderParamsWithContext(ctx context.Context) *UpdateCustomerOrderParams {
	var ()
	return &UpdateCustomerOrderParams{

		Context: ctx,
	}
}

// NewUpdateCustomerOrderParamsWithHTTPClient creates a new UpdateCustomerOrderParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateCustomerOrderParamsWithHTTPClient(client *http.Client) *UpdateCustomerOrderParams {
	var ()
	return &UpdateCustomerOrderParams{
		HTTPClient: client,
	}
}

/*UpdateCustomerOrderParams contains all the parameters to send to the API endpoint
for the update customer order operation typically these are written to a http.Request
*/
type UpdateCustomerOrderParams struct {

	/*Body
	  the properties to update of the customer order

	*/
	Body *models.CustomerOrder
	/*CustomerOrderID
	  id of the related object (important: id should match the uuid-format)

	*/
	CustomerOrderID string
	/*KoronaAccountID
	  account id of the KORONA.cloud account

	*/
	KoronaAccountID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update customer order params
func (o *UpdateCustomerOrderParams) WithTimeout(timeout time.Duration) *UpdateCustomerOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update customer order params
func (o *UpdateCustomerOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update customer order params
func (o *UpdateCustomerOrderParams) WithContext(ctx context.Context) *UpdateCustomerOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update customer order params
func (o *UpdateCustomerOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update customer order params
func (o *UpdateCustomerOrderParams) WithHTTPClient(client *http.Client) *UpdateCustomerOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update customer order params
func (o *UpdateCustomerOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update customer order params
func (o *UpdateCustomerOrderParams) WithBody(body *models.CustomerOrder) *UpdateCustomerOrderParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update customer order params
func (o *UpdateCustomerOrderParams) SetBody(body *models.CustomerOrder) {
	o.Body = body
}

// WithCustomerOrderID adds the customerOrderID to the update customer order params
func (o *UpdateCustomerOrderParams) WithCustomerOrderID(customerOrderID string) *UpdateCustomerOrderParams {
	o.SetCustomerOrderID(customerOrderID)
	return o
}

// SetCustomerOrderID adds the customerOrderId to the update customer order params
func (o *UpdateCustomerOrderParams) SetCustomerOrderID(customerOrderID string) {
	o.CustomerOrderID = customerOrderID
}

// WithKoronaAccountID adds the koronaAccountID to the update customer order params
func (o *UpdateCustomerOrderParams) WithKoronaAccountID(koronaAccountID string) *UpdateCustomerOrderParams {
	o.SetKoronaAccountID(koronaAccountID)
	return o
}

// SetKoronaAccountID adds the koronaAccountId to the update customer order params
func (o *UpdateCustomerOrderParams) SetKoronaAccountID(koronaAccountID string) {
	o.KoronaAccountID = koronaAccountID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCustomerOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param customerOrderId
	if err := r.SetPathParam("customerOrderId", o.CustomerOrderID); err != nil {
		return err
	}

	// path param koronaAccountId
	if err := r.SetPathParam("koronaAccountId", o.KoronaAccountID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
