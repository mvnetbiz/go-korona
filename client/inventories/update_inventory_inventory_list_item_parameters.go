// Code generated by go-swagger; DO NOT EDIT.

package inventories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// NewUpdateInventoryInventoryListItemParams creates a new UpdateInventoryInventoryListItemParams object
// with the default values initialized.
func NewUpdateInventoryInventoryListItemParams() *UpdateInventoryInventoryListItemParams {
	var ()
	return &UpdateInventoryInventoryListItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateInventoryInventoryListItemParamsWithTimeout creates a new UpdateInventoryInventoryListItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateInventoryInventoryListItemParamsWithTimeout(timeout time.Duration) *UpdateInventoryInventoryListItemParams {
	var ()
	return &UpdateInventoryInventoryListItemParams{

		timeout: timeout,
	}
}

// NewUpdateInventoryInventoryListItemParamsWithContext creates a new UpdateInventoryInventoryListItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateInventoryInventoryListItemParamsWithContext(ctx context.Context) *UpdateInventoryInventoryListItemParams {
	var ()
	return &UpdateInventoryInventoryListItemParams{

		Context: ctx,
	}
}

// NewUpdateInventoryInventoryListItemParamsWithHTTPClient creates a new UpdateInventoryInventoryListItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateInventoryInventoryListItemParamsWithHTTPClient(client *http.Client) *UpdateInventoryInventoryListItemParams {
	var ()
	return &UpdateInventoryInventoryListItemParams{
		HTTPClient: client,
	}
}

/*UpdateInventoryInventoryListItemParams contains all the parameters to send to the API endpoint
for the update inventory inventory list item operation typically these are written to a http.Request
*/
type UpdateInventoryInventoryListItemParams struct {

	/*Body
	  data to update

	*/
	Body *models.InventoryListItem
	/*InventoryID
	  id of the related object (important: id should match the uuid-format)

	*/
	InventoryID string
	/*InventoryListID
	  id of the related object (important: id should match the uuid-format)

	*/
	InventoryListID string
	/*KoronaAccountID
	  account id of the KORONA.cloud account

	*/
	KoronaAccountID string
	/*ProductID
	  id of the related object (important: id should match the uuid-format)

	*/
	ProductID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithTimeout(timeout time.Duration) *UpdateInventoryInventoryListItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithContext(ctx context.Context) *UpdateInventoryInventoryListItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithHTTPClient(client *http.Client) *UpdateInventoryInventoryListItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithBody(body *models.InventoryListItem) *UpdateInventoryInventoryListItemParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetBody(body *models.InventoryListItem) {
	o.Body = body
}

// WithInventoryID adds the inventoryID to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithInventoryID(inventoryID string) *UpdateInventoryInventoryListItemParams {
	o.SetInventoryID(inventoryID)
	return o
}

// SetInventoryID adds the inventoryId to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetInventoryID(inventoryID string) {
	o.InventoryID = inventoryID
}

// WithInventoryListID adds the inventoryListID to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithInventoryListID(inventoryListID string) *UpdateInventoryInventoryListItemParams {
	o.SetInventoryListID(inventoryListID)
	return o
}

// SetInventoryListID adds the inventoryListId to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetInventoryListID(inventoryListID string) {
	o.InventoryListID = inventoryListID
}

// WithKoronaAccountID adds the koronaAccountID to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithKoronaAccountID(koronaAccountID string) *UpdateInventoryInventoryListItemParams {
	o.SetKoronaAccountID(koronaAccountID)
	return o
}

// SetKoronaAccountID adds the koronaAccountId to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetKoronaAccountID(koronaAccountID string) {
	o.KoronaAccountID = koronaAccountID
}

// WithProductID adds the productID to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) WithProductID(productID string) *UpdateInventoryInventoryListItemParams {
	o.SetProductID(productID)
	return o
}

// SetProductID adds the productId to the update inventory inventory list item params
func (o *UpdateInventoryInventoryListItemParams) SetProductID(productID string) {
	o.ProductID = productID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateInventoryInventoryListItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param inventoryId
	if err := r.SetPathParam("inventoryId", o.InventoryID); err != nil {
		return err
	}

	// path param inventoryListId
	if err := r.SetPathParam("inventoryListId", o.InventoryListID); err != nil {
		return err
	}

	// path param koronaAccountId
	if err := r.SetPathParam("koronaAccountId", o.KoronaAccountID); err != nil {
		return err
	}

	// path param productId
	if err := r.SetPathParam("productId", o.ProductID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
