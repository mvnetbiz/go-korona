// Code generated by go-swagger; DO NOT EDIT.

package receipts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetReceiptsReader is a Reader for the GetReceipts structure.
type GetReceiptsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReceiptsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReceiptsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetReceiptsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReceiptsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetReceiptsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReceiptsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReceiptsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetReceiptsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReceiptsOK creates a GetReceiptsOK with default headers values
func NewGetReceiptsOK() *GetReceiptsOK {
	return &GetReceiptsOK{}
}

/*GetReceiptsOK handles this case with default header values.

successful operation
*/
type GetReceiptsOK struct {
	Payload *models.ResultListReceipt
}

func (o *GetReceiptsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsOK  %+v", 200, o.Payload)
}

func (o *GetReceiptsOK) GetPayload() *models.ResultListReceipt {
	return o.Payload
}

func (o *GetReceiptsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListReceipt)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReceiptsNoContent creates a GetReceiptsNoContent with default headers values
func NewGetReceiptsNoContent() *GetReceiptsNoContent {
	return &GetReceiptsNoContent{}
}

/*GetReceiptsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetReceiptsNoContent struct {
}

func (o *GetReceiptsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsNoContent ", 204)
}

func (o *GetReceiptsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReceiptsBadRequest creates a GetReceiptsBadRequest with default headers values
func NewGetReceiptsBadRequest() *GetReceiptsBadRequest {
	return &GetReceiptsBadRequest{}
}

/*GetReceiptsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetReceiptsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetReceiptsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsBadRequest  %+v", 400, o.Payload)
}

func (o *GetReceiptsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetReceiptsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReceiptsUnauthorized creates a GetReceiptsUnauthorized with default headers values
func NewGetReceiptsUnauthorized() *GetReceiptsUnauthorized {
	return &GetReceiptsUnauthorized{}
}

/*GetReceiptsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetReceiptsUnauthorized struct {
}

func (o *GetReceiptsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsUnauthorized ", 401)
}

func (o *GetReceiptsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReceiptsForbidden creates a GetReceiptsForbidden with default headers values
func NewGetReceiptsForbidden() *GetReceiptsForbidden {
	return &GetReceiptsForbidden{}
}

/*GetReceiptsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetReceiptsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetReceiptsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsForbidden  %+v", 403, o.Payload)
}

func (o *GetReceiptsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetReceiptsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReceiptsNotFound creates a GetReceiptsNotFound with default headers values
func NewGetReceiptsNotFound() *GetReceiptsNotFound {
	return &GetReceiptsNotFound{}
}

/*GetReceiptsNotFound handles this case with default header values.

Object not found
*/
type GetReceiptsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetReceiptsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsNotFound  %+v", 404, o.Payload)
}

func (o *GetReceiptsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetReceiptsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReceiptsTooManyRequests creates a GetReceiptsTooManyRequests with default headers values
func NewGetReceiptsTooManyRequests() *GetReceiptsTooManyRequests {
	return &GetReceiptsTooManyRequests{}
}

/*GetReceiptsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetReceiptsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetReceiptsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/receipts][%d] getReceiptsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetReceiptsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetReceiptsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
