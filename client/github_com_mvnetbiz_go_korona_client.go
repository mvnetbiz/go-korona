// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/client/accounts"
	"github.com/mvnetbiz/go-korona/client/additional_receipt_info_types"
	"github.com/mvnetbiz/go-korona/client/assortments"
	"github.com/mvnetbiz/go-korona/client/cashiers"
	"github.com/mvnetbiz/go-korona/client/commodity_groups"
	"github.com/mvnetbiz/go-korona/client/currencies"
	"github.com/mvnetbiz/go-korona/client/customer_groups"
	"github.com/mvnetbiz/go-korona/client/customer_orders"
	"github.com/mvnetbiz/go-korona/client/customers"
	"github.com/mvnetbiz/go-korona/client/delivery_notes"
	"github.com/mvnetbiz/go-korona/client/economic_zones"
	"github.com/mvnetbiz/go-korona/client/external_system_calls"
	"github.com/mvnetbiz/go-korona/client/images"
	"github.com/mvnetbiz/go-korona/client/info_texts"
	"github.com/mvnetbiz/go-korona/client/inventories"
	"github.com/mvnetbiz/go-korona/client/korona_account"
	"github.com/mvnetbiz/go-korona/client/organizational_units"
	"github.com/mvnetbiz/go-korona/client/payment_methods"
	"github.com/mvnetbiz/go-korona/client/points_of_sale"
	"github.com/mvnetbiz/go-korona/client/price_groups"
	"github.com/mvnetbiz/go-korona/client/products"
	"github.com/mvnetbiz/go-korona/client/receipts"
	"github.com/mvnetbiz/go-korona/client/sales_taxes"
	"github.com/mvnetbiz/go-korona/client/sectors"
	"github.com/mvnetbiz/go-korona/client/statistics"
	"github.com/mvnetbiz/go-korona/client/stock_receipts"
	"github.com/mvnetbiz/go-korona/client/suppliers"
	"github.com/mvnetbiz/go-korona/client/tags"
	"github.com/mvnetbiz/go-korona/client/ticket_creation"
	"github.com/mvnetbiz/go-korona/client/ticketing"
	"github.com/mvnetbiz/go-korona/client/time_tracking"
)

// Default github com mvnetbiz go korona HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "167.koronacloud.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/web/api/v3"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new github com mvnetbiz go korona HTTP client.
func NewHTTPClient(formats strfmt.Registry) *GithubComMvnetbizGoKorona {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new github com mvnetbiz go korona HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *GithubComMvnetbizGoKorona {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new github com mvnetbiz go korona client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *GithubComMvnetbizGoKorona {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(GithubComMvnetbizGoKorona)
	cli.Transport = transport
	cli.Accounts = accounts.New(transport, formats)
	cli.AdditionalReceiptInfoTypes = additional_receipt_info_types.New(transport, formats)
	cli.Assortments = assortments.New(transport, formats)
	cli.Cashiers = cashiers.New(transport, formats)
	cli.CommodityGroups = commodity_groups.New(transport, formats)
	cli.Currencies = currencies.New(transport, formats)
	cli.CustomerGroups = customer_groups.New(transport, formats)
	cli.CustomerOrders = customer_orders.New(transport, formats)
	cli.Customers = customers.New(transport, formats)
	cli.DeliveryNotes = delivery_notes.New(transport, formats)
	cli.EconomicZones = economic_zones.New(transport, formats)
	cli.ExternalSystemCalls = external_system_calls.New(transport, formats)
	cli.Images = images.New(transport, formats)
	cli.InfoTexts = info_texts.New(transport, formats)
	cli.Inventories = inventories.New(transport, formats)
	cli.KoronaAccount = korona_account.New(transport, formats)
	cli.OrganizationalUnits = organizational_units.New(transport, formats)
	cli.PaymentMethods = payment_methods.New(transport, formats)
	cli.PointsOfSale = points_of_sale.New(transport, formats)
	cli.PriceGroups = price_groups.New(transport, formats)
	cli.Products = products.New(transport, formats)
	cli.Receipts = receipts.New(transport, formats)
	cli.SalesTaxes = sales_taxes.New(transport, formats)
	cli.Sectors = sectors.New(transport, formats)
	cli.Statistics = statistics.New(transport, formats)
	cli.StockReceipts = stock_receipts.New(transport, formats)
	cli.Suppliers = suppliers.New(transport, formats)
	cli.Tags = tags.New(transport, formats)
	cli.TicketCreation = ticket_creation.New(transport, formats)
	cli.Ticketing = ticketing.New(transport, formats)
	cli.TimeTracking = time_tracking.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// GithubComMvnetbizGoKorona is a client for github com mvnetbiz go korona
type GithubComMvnetbizGoKorona struct {
	Accounts accounts.ClientService

	AdditionalReceiptInfoTypes additional_receipt_info_types.ClientService

	Assortments assortments.ClientService

	Cashiers cashiers.ClientService

	CommodityGroups commodity_groups.ClientService

	Currencies currencies.ClientService

	CustomerGroups customer_groups.ClientService

	CustomerOrders customer_orders.ClientService

	Customers customers.ClientService

	DeliveryNotes delivery_notes.ClientService

	EconomicZones economic_zones.ClientService

	ExternalSystemCalls external_system_calls.ClientService

	Images images.ClientService

	InfoTexts info_texts.ClientService

	Inventories inventories.ClientService

	KoronaAccount korona_account.ClientService

	OrganizationalUnits organizational_units.ClientService

	PaymentMethods payment_methods.ClientService

	PointsOfSale points_of_sale.ClientService

	PriceGroups price_groups.ClientService

	Products products.ClientService

	Receipts receipts.ClientService

	SalesTaxes sales_taxes.ClientService

	Sectors sectors.ClientService

	Statistics statistics.ClientService

	StockReceipts stock_receipts.ClientService

	Suppliers suppliers.ClientService

	Tags tags.ClientService

	TicketCreation ticket_creation.ClientService

	Ticketing ticketing.ClientService

	TimeTracking time_tracking.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *GithubComMvnetbizGoKorona) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Accounts.SetTransport(transport)
	c.AdditionalReceiptInfoTypes.SetTransport(transport)
	c.Assortments.SetTransport(transport)
	c.Cashiers.SetTransport(transport)
	c.CommodityGroups.SetTransport(transport)
	c.Currencies.SetTransport(transport)
	c.CustomerGroups.SetTransport(transport)
	c.CustomerOrders.SetTransport(transport)
	c.Customers.SetTransport(transport)
	c.DeliveryNotes.SetTransport(transport)
	c.EconomicZones.SetTransport(transport)
	c.ExternalSystemCalls.SetTransport(transport)
	c.Images.SetTransport(transport)
	c.InfoTexts.SetTransport(transport)
	c.Inventories.SetTransport(transport)
	c.KoronaAccount.SetTransport(transport)
	c.OrganizationalUnits.SetTransport(transport)
	c.PaymentMethods.SetTransport(transport)
	c.PointsOfSale.SetTransport(transport)
	c.PriceGroups.SetTransport(transport)
	c.Products.SetTransport(transport)
	c.Receipts.SetTransport(transport)
	c.SalesTaxes.SetTransport(transport)
	c.Sectors.SetTransport(transport)
	c.Statistics.SetTransport(transport)
	c.StockReceipts.SetTransport(transport)
	c.Suppliers.SetTransport(transport)
	c.Tags.SetTransport(transport)
	c.TicketCreation.SetTransport(transport)
	c.Ticketing.SetTransport(transport)
	c.TimeTracking.SetTransport(transport)
}
