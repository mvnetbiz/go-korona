// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// UpdateCustomerReader is a Reader for the UpdateCustomer structure.
type UpdateCustomerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateCustomerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCustomerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCustomerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCustomerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCustomerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateCustomerTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateCustomerNoContent creates a UpdateCustomerNoContent with default headers values
func NewUpdateCustomerNoContent() *UpdateCustomerNoContent {
	return &UpdateCustomerNoContent{}
}

/*UpdateCustomerNoContent handles this case with default header values.

Request successful, patch on single resource does not return any content
*/
type UpdateCustomerNoContent struct {
}

func (o *UpdateCustomerNoContent) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/customers/{customerId}][%d] updateCustomerNoContent ", 204)
}

func (o *UpdateCustomerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomerBadRequest creates a UpdateCustomerBadRequest with default headers values
func NewUpdateCustomerBadRequest() *UpdateCustomerBadRequest {
	return &UpdateCustomerBadRequest{}
}

/*UpdateCustomerBadRequest handles this case with default header values.

Malformed querystring or model
*/
type UpdateCustomerBadRequest struct {
	Payload *models.BadRequestError
}

func (o *UpdateCustomerBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/customers/{customerId}][%d] updateCustomerBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCustomerBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *UpdateCustomerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomerUnauthorized creates a UpdateCustomerUnauthorized with default headers values
func NewUpdateCustomerUnauthorized() *UpdateCustomerUnauthorized {
	return &UpdateCustomerUnauthorized{}
}

/*UpdateCustomerUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type UpdateCustomerUnauthorized struct {
}

func (o *UpdateCustomerUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/customers/{customerId}][%d] updateCustomerUnauthorized ", 401)
}

func (o *UpdateCustomerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomerForbidden creates a UpdateCustomerForbidden with default headers values
func NewUpdateCustomerForbidden() *UpdateCustomerForbidden {
	return &UpdateCustomerForbidden{}
}

/*UpdateCustomerForbidden handles this case with default header values.

Requested action is not allowed
*/
type UpdateCustomerForbidden struct {
	Payload *models.ForbiddenError
}

func (o *UpdateCustomerForbidden) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/customers/{customerId}][%d] updateCustomerForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCustomerForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *UpdateCustomerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomerNotFound creates a UpdateCustomerNotFound with default headers values
func NewUpdateCustomerNotFound() *UpdateCustomerNotFound {
	return &UpdateCustomerNotFound{}
}

/*UpdateCustomerNotFound handles this case with default header values.

Object not found
*/
type UpdateCustomerNotFound struct {
	Payload *models.NotFoundError
}

func (o *UpdateCustomerNotFound) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/customers/{customerId}][%d] updateCustomerNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCustomerNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *UpdateCustomerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomerTooManyRequests creates a UpdateCustomerTooManyRequests with default headers values
func NewUpdateCustomerTooManyRequests() *UpdateCustomerTooManyRequests {
	return &UpdateCustomerTooManyRequests{}
}

/*UpdateCustomerTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type UpdateCustomerTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *UpdateCustomerTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/customers/{customerId}][%d] updateCustomerTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateCustomerTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *UpdateCustomerTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
