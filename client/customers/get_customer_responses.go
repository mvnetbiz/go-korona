// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetCustomerReader is a Reader for the GetCustomer structure.
type GetCustomerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCustomerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomerTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomerOK creates a GetCustomerOK with default headers values
func NewGetCustomerOK() *GetCustomerOK {
	return &GetCustomerOK{}
}

/*GetCustomerOK handles this case with default header values.

successful operation
*/
type GetCustomerOK struct {
	Payload *models.Customer
}

func (o *GetCustomerOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers/{customerId}][%d] getCustomerOK  %+v", 200, o.Payload)
}

func (o *GetCustomerOK) GetPayload() *models.Customer {
	return o.Payload
}

func (o *GetCustomerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerBadRequest creates a GetCustomerBadRequest with default headers values
func NewGetCustomerBadRequest() *GetCustomerBadRequest {
	return &GetCustomerBadRequest{}
}

/*GetCustomerBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetCustomerBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCustomerBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers/{customerId}][%d] getCustomerBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomerBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCustomerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerUnauthorized creates a GetCustomerUnauthorized with default headers values
func NewGetCustomerUnauthorized() *GetCustomerUnauthorized {
	return &GetCustomerUnauthorized{}
}

/*GetCustomerUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetCustomerUnauthorized struct {
}

func (o *GetCustomerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers/{customerId}][%d] getCustomerUnauthorized ", 401)
}

func (o *GetCustomerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomerForbidden creates a GetCustomerForbidden with default headers values
func NewGetCustomerForbidden() *GetCustomerForbidden {
	return &GetCustomerForbidden{}
}

/*GetCustomerForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetCustomerForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetCustomerForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers/{customerId}][%d] getCustomerForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomerForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetCustomerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerNotFound creates a GetCustomerNotFound with default headers values
func NewGetCustomerNotFound() *GetCustomerNotFound {
	return &GetCustomerNotFound{}
}

/*GetCustomerNotFound handles this case with default header values.

Object not found
*/
type GetCustomerNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCustomerNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers/{customerId}][%d] getCustomerNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomerNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCustomerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomerTooManyRequests creates a GetCustomerTooManyRequests with default headers values
func NewGetCustomerTooManyRequests() *GetCustomerTooManyRequests {
	return &GetCustomerTooManyRequests{}
}

/*GetCustomerTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetCustomerTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetCustomerTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers/{customerId}][%d] getCustomerTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCustomerTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetCustomerTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
