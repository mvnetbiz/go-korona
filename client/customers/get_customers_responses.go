// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetCustomersReader is a Reader for the GetCustomers structure.
type GetCustomersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetCustomersNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCustomersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomersOK creates a GetCustomersOK with default headers values
func NewGetCustomersOK() *GetCustomersOK {
	return &GetCustomersOK{}
}

/*GetCustomersOK handles this case with default header values.

successful operation
*/
type GetCustomersOK struct {
	Payload *models.ResultListCustomer
}

func (o *GetCustomersOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersOK  %+v", 200, o.Payload)
}

func (o *GetCustomersOK) GetPayload() *models.ResultListCustomer {
	return o.Payload
}

func (o *GetCustomersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListCustomer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomersNoContent creates a GetCustomersNoContent with default headers values
func NewGetCustomersNoContent() *GetCustomersNoContent {
	return &GetCustomersNoContent{}
}

/*GetCustomersNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetCustomersNoContent struct {
}

func (o *GetCustomersNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersNoContent ", 204)
}

func (o *GetCustomersNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersBadRequest creates a GetCustomersBadRequest with default headers values
func NewGetCustomersBadRequest() *GetCustomersBadRequest {
	return &GetCustomersBadRequest{}
}

/*GetCustomersBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetCustomersBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCustomersBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomersBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCustomersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomersUnauthorized creates a GetCustomersUnauthorized with default headers values
func NewGetCustomersUnauthorized() *GetCustomersUnauthorized {
	return &GetCustomersUnauthorized{}
}

/*GetCustomersUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetCustomersUnauthorized struct {
}

func (o *GetCustomersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersUnauthorized ", 401)
}

func (o *GetCustomersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersForbidden creates a GetCustomersForbidden with default headers values
func NewGetCustomersForbidden() *GetCustomersForbidden {
	return &GetCustomersForbidden{}
}

/*GetCustomersForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetCustomersForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetCustomersForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomersForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetCustomersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomersNotFound creates a GetCustomersNotFound with default headers values
func NewGetCustomersNotFound() *GetCustomersNotFound {
	return &GetCustomersNotFound{}
}

/*GetCustomersNotFound handles this case with default header values.

Object not found
*/
type GetCustomersNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCustomersNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomersNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCustomersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomersTooManyRequests creates a GetCustomersTooManyRequests with default headers values
func NewGetCustomersTooManyRequests() *GetCustomersTooManyRequests {
	return &GetCustomersTooManyRequests{}
}

/*GetCustomersTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetCustomersTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetCustomersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/customers][%d] getCustomersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCustomersTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetCustomersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
