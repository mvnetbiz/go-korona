// Code generated by go-swagger; DO NOT EDIT.

package info_texts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetInfoTextsReader is a Reader for the GetInfoTexts structure.
type GetInfoTextsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInfoTextsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInfoTextsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetInfoTextsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInfoTextsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInfoTextsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInfoTextsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInfoTextsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInfoTextsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInfoTextsOK creates a GetInfoTextsOK with default headers values
func NewGetInfoTextsOK() *GetInfoTextsOK {
	return &GetInfoTextsOK{}
}

/*GetInfoTextsOK handles this case with default header values.

successful operation
*/
type GetInfoTextsOK struct {
	Payload *models.ResultListInfoText
}

func (o *GetInfoTextsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsOK  %+v", 200, o.Payload)
}

func (o *GetInfoTextsOK) GetPayload() *models.ResultListInfoText {
	return o.Payload
}

func (o *GetInfoTextsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListInfoText)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoTextsNoContent creates a GetInfoTextsNoContent with default headers values
func NewGetInfoTextsNoContent() *GetInfoTextsNoContent {
	return &GetInfoTextsNoContent{}
}

/*GetInfoTextsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetInfoTextsNoContent struct {
}

func (o *GetInfoTextsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsNoContent ", 204)
}

func (o *GetInfoTextsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInfoTextsBadRequest creates a GetInfoTextsBadRequest with default headers values
func NewGetInfoTextsBadRequest() *GetInfoTextsBadRequest {
	return &GetInfoTextsBadRequest{}
}

/*GetInfoTextsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetInfoTextsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetInfoTextsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInfoTextsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetInfoTextsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoTextsUnauthorized creates a GetInfoTextsUnauthorized with default headers values
func NewGetInfoTextsUnauthorized() *GetInfoTextsUnauthorized {
	return &GetInfoTextsUnauthorized{}
}

/*GetInfoTextsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetInfoTextsUnauthorized struct {
}

func (o *GetInfoTextsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsUnauthorized ", 401)
}

func (o *GetInfoTextsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInfoTextsForbidden creates a GetInfoTextsForbidden with default headers values
func NewGetInfoTextsForbidden() *GetInfoTextsForbidden {
	return &GetInfoTextsForbidden{}
}

/*GetInfoTextsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetInfoTextsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetInfoTextsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsForbidden  %+v", 403, o.Payload)
}

func (o *GetInfoTextsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetInfoTextsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoTextsNotFound creates a GetInfoTextsNotFound with default headers values
func NewGetInfoTextsNotFound() *GetInfoTextsNotFound {
	return &GetInfoTextsNotFound{}
}

/*GetInfoTextsNotFound handles this case with default header values.

Object not found
*/
type GetInfoTextsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetInfoTextsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsNotFound  %+v", 404, o.Payload)
}

func (o *GetInfoTextsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetInfoTextsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInfoTextsTooManyRequests creates a GetInfoTextsTooManyRequests with default headers values
func NewGetInfoTextsTooManyRequests() *GetInfoTextsTooManyRequests {
	return &GetInfoTextsTooManyRequests{}
}

/*GetInfoTextsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetInfoTextsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetInfoTextsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/infoTexts][%d] getInfoTextsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInfoTextsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetInfoTextsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
