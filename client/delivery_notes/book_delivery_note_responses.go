// Code generated by go-swagger; DO NOT EDIT.

package delivery_notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// BookDeliveryNoteReader is a Reader for the BookDeliveryNote structure.
type BookDeliveryNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BookDeliveryNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewBookDeliveryNoteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBookDeliveryNoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBookDeliveryNoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBookDeliveryNoteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBookDeliveryNoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewBookDeliveryNoteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBookDeliveryNoteNoContent creates a BookDeliveryNoteNoContent with default headers values
func NewBookDeliveryNoteNoContent() *BookDeliveryNoteNoContent {
	return &BookDeliveryNoteNoContent{}
}

/*BookDeliveryNoteNoContent handles this case with default header values.

Request successful, patch on single resource does not return any content
*/
type BookDeliveryNoteNoContent struct {
}

func (o *BookDeliveryNoteNoContent) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book][%d] bookDeliveryNoteNoContent ", 204)
}

func (o *BookDeliveryNoteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBookDeliveryNoteBadRequest creates a BookDeliveryNoteBadRequest with default headers values
func NewBookDeliveryNoteBadRequest() *BookDeliveryNoteBadRequest {
	return &BookDeliveryNoteBadRequest{}
}

/*BookDeliveryNoteBadRequest handles this case with default header values.

Malformed querystring or model
*/
type BookDeliveryNoteBadRequest struct {
	Payload *models.BadRequestError
}

func (o *BookDeliveryNoteBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book][%d] bookDeliveryNoteBadRequest  %+v", 400, o.Payload)
}

func (o *BookDeliveryNoteBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *BookDeliveryNoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookDeliveryNoteUnauthorized creates a BookDeliveryNoteUnauthorized with default headers values
func NewBookDeliveryNoteUnauthorized() *BookDeliveryNoteUnauthorized {
	return &BookDeliveryNoteUnauthorized{}
}

/*BookDeliveryNoteUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type BookDeliveryNoteUnauthorized struct {
}

func (o *BookDeliveryNoteUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book][%d] bookDeliveryNoteUnauthorized ", 401)
}

func (o *BookDeliveryNoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBookDeliveryNoteForbidden creates a BookDeliveryNoteForbidden with default headers values
func NewBookDeliveryNoteForbidden() *BookDeliveryNoteForbidden {
	return &BookDeliveryNoteForbidden{}
}

/*BookDeliveryNoteForbidden handles this case with default header values.

Requested action is not allowed
*/
type BookDeliveryNoteForbidden struct {
	Payload *models.ForbiddenError
}

func (o *BookDeliveryNoteForbidden) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book][%d] bookDeliveryNoteForbidden  %+v", 403, o.Payload)
}

func (o *BookDeliveryNoteForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *BookDeliveryNoteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookDeliveryNoteNotFound creates a BookDeliveryNoteNotFound with default headers values
func NewBookDeliveryNoteNotFound() *BookDeliveryNoteNotFound {
	return &BookDeliveryNoteNotFound{}
}

/*BookDeliveryNoteNotFound handles this case with default header values.

Object not found
*/
type BookDeliveryNoteNotFound struct {
	Payload *models.NotFoundError
}

func (o *BookDeliveryNoteNotFound) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book][%d] bookDeliveryNoteNotFound  %+v", 404, o.Payload)
}

func (o *BookDeliveryNoteNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *BookDeliveryNoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookDeliveryNoteTooManyRequests creates a BookDeliveryNoteTooManyRequests with default headers values
func NewBookDeliveryNoteTooManyRequests() *BookDeliveryNoteTooManyRequests {
	return &BookDeliveryNoteTooManyRequests{}
}

/*BookDeliveryNoteTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type BookDeliveryNoteTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *BookDeliveryNoteTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}/book][%d] bookDeliveryNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *BookDeliveryNoteTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *BookDeliveryNoteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
