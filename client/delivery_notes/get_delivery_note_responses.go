// Code generated by go-swagger; DO NOT EDIT.

package delivery_notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetDeliveryNoteReader is a Reader for the GetDeliveryNote structure.
type GetDeliveryNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeliveryNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeliveryNoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeliveryNoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDeliveryNoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeliveryNoteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeliveryNoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDeliveryNoteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeliveryNoteOK creates a GetDeliveryNoteOK with default headers values
func NewGetDeliveryNoteOK() *GetDeliveryNoteOK {
	return &GetDeliveryNoteOK{}
}

/*GetDeliveryNoteOK handles this case with default header values.

successful operation
*/
type GetDeliveryNoteOK struct {
	Payload *models.DeliveryNote
}

func (o *GetDeliveryNoteOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}][%d] getDeliveryNoteOK  %+v", 200, o.Payload)
}

func (o *GetDeliveryNoteOK) GetPayload() *models.DeliveryNote {
	return o.Payload
}

func (o *GetDeliveryNoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeliveryNote)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryNoteBadRequest creates a GetDeliveryNoteBadRequest with default headers values
func NewGetDeliveryNoteBadRequest() *GetDeliveryNoteBadRequest {
	return &GetDeliveryNoteBadRequest{}
}

/*GetDeliveryNoteBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetDeliveryNoteBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetDeliveryNoteBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}][%d] getDeliveryNoteBadRequest  %+v", 400, o.Payload)
}

func (o *GetDeliveryNoteBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetDeliveryNoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryNoteUnauthorized creates a GetDeliveryNoteUnauthorized with default headers values
func NewGetDeliveryNoteUnauthorized() *GetDeliveryNoteUnauthorized {
	return &GetDeliveryNoteUnauthorized{}
}

/*GetDeliveryNoteUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetDeliveryNoteUnauthorized struct {
}

func (o *GetDeliveryNoteUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}][%d] getDeliveryNoteUnauthorized ", 401)
}

func (o *GetDeliveryNoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeliveryNoteForbidden creates a GetDeliveryNoteForbidden with default headers values
func NewGetDeliveryNoteForbidden() *GetDeliveryNoteForbidden {
	return &GetDeliveryNoteForbidden{}
}

/*GetDeliveryNoteForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetDeliveryNoteForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetDeliveryNoteForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}][%d] getDeliveryNoteForbidden  %+v", 403, o.Payload)
}

func (o *GetDeliveryNoteForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetDeliveryNoteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryNoteNotFound creates a GetDeliveryNoteNotFound with default headers values
func NewGetDeliveryNoteNotFound() *GetDeliveryNoteNotFound {
	return &GetDeliveryNoteNotFound{}
}

/*GetDeliveryNoteNotFound handles this case with default header values.

Object not found
*/
type GetDeliveryNoteNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetDeliveryNoteNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}][%d] getDeliveryNoteNotFound  %+v", 404, o.Payload)
}

func (o *GetDeliveryNoteNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetDeliveryNoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryNoteTooManyRequests creates a GetDeliveryNoteTooManyRequests with default headers values
func NewGetDeliveryNoteTooManyRequests() *GetDeliveryNoteTooManyRequests {
	return &GetDeliveryNoteTooManyRequests{}
}

/*GetDeliveryNoteTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetDeliveryNoteTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetDeliveryNoteTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/deliveryNotes/{deliveryNoteId}][%d] getDeliveryNoteTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDeliveryNoteTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetDeliveryNoteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
