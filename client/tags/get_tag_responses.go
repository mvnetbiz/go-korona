// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetTagReader is a Reader for the GetTag structure.
type GetTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTagTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTagOK creates a GetTagOK with default headers values
func NewGetTagOK() *GetTagOK {
	return &GetTagOK{}
}

/*GetTagOK handles this case with default header values.

successful operation
*/
type GetTagOK struct {
	Payload *models.Tag
}

func (o *GetTagOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/tags/{tagId}][%d] getTagOK  %+v", 200, o.Payload)
}

func (o *GetTagOK) GetPayload() *models.Tag {
	return o.Payload
}

func (o *GetTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Tag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagBadRequest creates a GetTagBadRequest with default headers values
func NewGetTagBadRequest() *GetTagBadRequest {
	return &GetTagBadRequest{}
}

/*GetTagBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetTagBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetTagBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/tags/{tagId}][%d] getTagBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagUnauthorized creates a GetTagUnauthorized with default headers values
func NewGetTagUnauthorized() *GetTagUnauthorized {
	return &GetTagUnauthorized{}
}

/*GetTagUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetTagUnauthorized struct {
}

func (o *GetTagUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/tags/{tagId}][%d] getTagUnauthorized ", 401)
}

func (o *GetTagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagForbidden creates a GetTagForbidden with default headers values
func NewGetTagForbidden() *GetTagForbidden {
	return &GetTagForbidden{}
}

/*GetTagForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetTagForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetTagForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/tags/{tagId}][%d] getTagForbidden  %+v", 403, o.Payload)
}

func (o *GetTagForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagNotFound creates a GetTagNotFound with default headers values
func NewGetTagNotFound() *GetTagNotFound {
	return &GetTagNotFound{}
}

/*GetTagNotFound handles this case with default header values.

Object not found
*/
type GetTagNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetTagNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/tags/{tagId}][%d] getTagNotFound  %+v", 404, o.Payload)
}

func (o *GetTagNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagTooManyRequests creates a GetTagTooManyRequests with default headers values
func NewGetTagTooManyRequests() *GetTagTooManyRequests {
	return &GetTagTooManyRequests{}
}

/*GetTagTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetTagTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetTagTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/tags/{tagId}][%d] getTagTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTagTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetTagTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
