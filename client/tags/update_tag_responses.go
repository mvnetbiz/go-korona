// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// UpdateTagReader is a Reader for the UpdateTag structure.
type UpdateTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateTagNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateTagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateTagTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateTagNoContent creates a UpdateTagNoContent with default headers values
func NewUpdateTagNoContent() *UpdateTagNoContent {
	return &UpdateTagNoContent{}
}

/*UpdateTagNoContent handles this case with default header values.

Request successful, patch on single resource does not return any content
*/
type UpdateTagNoContent struct {
}

func (o *UpdateTagNoContent) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/tags/{tagId}][%d] updateTagNoContent ", 204)
}

func (o *UpdateTagNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTagBadRequest creates a UpdateTagBadRequest with default headers values
func NewUpdateTagBadRequest() *UpdateTagBadRequest {
	return &UpdateTagBadRequest{}
}

/*UpdateTagBadRequest handles this case with default header values.

Malformed querystring or model
*/
type UpdateTagBadRequest struct {
	Payload *models.BadRequestError
}

func (o *UpdateTagBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/tags/{tagId}][%d] updateTagBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTagBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *UpdateTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTagUnauthorized creates a UpdateTagUnauthorized with default headers values
func NewUpdateTagUnauthorized() *UpdateTagUnauthorized {
	return &UpdateTagUnauthorized{}
}

/*UpdateTagUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type UpdateTagUnauthorized struct {
}

func (o *UpdateTagUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/tags/{tagId}][%d] updateTagUnauthorized ", 401)
}

func (o *UpdateTagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTagForbidden creates a UpdateTagForbidden with default headers values
func NewUpdateTagForbidden() *UpdateTagForbidden {
	return &UpdateTagForbidden{}
}

/*UpdateTagForbidden handles this case with default header values.

Requested action is not allowed
*/
type UpdateTagForbidden struct {
	Payload *models.ForbiddenError
}

func (o *UpdateTagForbidden) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/tags/{tagId}][%d] updateTagForbidden  %+v", 403, o.Payload)
}

func (o *UpdateTagForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *UpdateTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTagNotFound creates a UpdateTagNotFound with default headers values
func NewUpdateTagNotFound() *UpdateTagNotFound {
	return &UpdateTagNotFound{}
}

/*UpdateTagNotFound handles this case with default header values.

Object not found
*/
type UpdateTagNotFound struct {
	Payload *models.NotFoundError
}

func (o *UpdateTagNotFound) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/tags/{tagId}][%d] updateTagNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTagNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *UpdateTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTagTooManyRequests creates a UpdateTagTooManyRequests with default headers values
func NewUpdateTagTooManyRequests() *UpdateTagTooManyRequests {
	return &UpdateTagTooManyRequests{}
}

/*UpdateTagTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type UpdateTagTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *UpdateTagTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/tags/{tagId}][%d] updateTagTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateTagTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *UpdateTagTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
