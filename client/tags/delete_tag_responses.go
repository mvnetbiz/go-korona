// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteTagReader is a Reader for the DeleteTag structure.
type DeleteTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTagNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTagUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteTagTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTagNoContent creates a DeleteTagNoContent with default headers values
func NewDeleteTagNoContent() *DeleteTagNoContent {
	return &DeleteTagNoContent{}
}

/*DeleteTagNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type DeleteTagNoContent struct {
}

func (o *DeleteTagNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/tags/{tagId}][%d] deleteTagNoContent ", 204)
}

func (o *DeleteTagNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTagBadRequest creates a DeleteTagBadRequest with default headers values
func NewDeleteTagBadRequest() *DeleteTagBadRequest {
	return &DeleteTagBadRequest{}
}

/*DeleteTagBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteTagBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteTagBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/tags/{tagId}][%d] deleteTagBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTagBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagUnauthorized creates a DeleteTagUnauthorized with default headers values
func NewDeleteTagUnauthorized() *DeleteTagUnauthorized {
	return &DeleteTagUnauthorized{}
}

/*DeleteTagUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteTagUnauthorized struct {
}

func (o *DeleteTagUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/tags/{tagId}][%d] deleteTagUnauthorized ", 401)
}

func (o *DeleteTagUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTagForbidden creates a DeleteTagForbidden with default headers values
func NewDeleteTagForbidden() *DeleteTagForbidden {
	return &DeleteTagForbidden{}
}

/*DeleteTagForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteTagForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteTagForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/tags/{tagId}][%d] deleteTagForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTagForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagNotFound creates a DeleteTagNotFound with default headers values
func NewDeleteTagNotFound() *DeleteTagNotFound {
	return &DeleteTagNotFound{}
}

/*DeleteTagNotFound handles this case with default header values.

Object not found
*/
type DeleteTagNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteTagNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/tags/{tagId}][%d] deleteTagNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTagNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTagTooManyRequests creates a DeleteTagTooManyRequests with default headers values
func NewDeleteTagTooManyRequests() *DeleteTagTooManyRequests {
	return &DeleteTagTooManyRequests{}
}

/*DeleteTagTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteTagTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteTagTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/tags/{tagId}][%d] deleteTagTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTagTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteTagTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
