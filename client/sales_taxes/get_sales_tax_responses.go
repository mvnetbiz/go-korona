// Code generated by go-swagger; DO NOT EDIT.

package sales_taxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetSalesTaxReader is a Reader for the GetSalesTax structure.
type GetSalesTaxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSalesTaxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSalesTaxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSalesTaxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSalesTaxUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSalesTaxForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSalesTaxNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSalesTaxTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSalesTaxOK creates a GetSalesTaxOK with default headers values
func NewGetSalesTaxOK() *GetSalesTaxOK {
	return &GetSalesTaxOK{}
}

/*GetSalesTaxOK handles this case with default header values.

successful operation
*/
type GetSalesTaxOK struct {
	Payload *models.SalesTax
}

func (o *GetSalesTaxOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}][%d] getSalesTaxOK  %+v", 200, o.Payload)
}

func (o *GetSalesTaxOK) GetPayload() *models.SalesTax {
	return o.Payload
}

func (o *GetSalesTaxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SalesTax)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxBadRequest creates a GetSalesTaxBadRequest with default headers values
func NewGetSalesTaxBadRequest() *GetSalesTaxBadRequest {
	return &GetSalesTaxBadRequest{}
}

/*GetSalesTaxBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetSalesTaxBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetSalesTaxBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}][%d] getSalesTaxBadRequest  %+v", 400, o.Payload)
}

func (o *GetSalesTaxBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetSalesTaxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxUnauthorized creates a GetSalesTaxUnauthorized with default headers values
func NewGetSalesTaxUnauthorized() *GetSalesTaxUnauthorized {
	return &GetSalesTaxUnauthorized{}
}

/*GetSalesTaxUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetSalesTaxUnauthorized struct {
}

func (o *GetSalesTaxUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}][%d] getSalesTaxUnauthorized ", 401)
}

func (o *GetSalesTaxUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSalesTaxForbidden creates a GetSalesTaxForbidden with default headers values
func NewGetSalesTaxForbidden() *GetSalesTaxForbidden {
	return &GetSalesTaxForbidden{}
}

/*GetSalesTaxForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetSalesTaxForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetSalesTaxForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}][%d] getSalesTaxForbidden  %+v", 403, o.Payload)
}

func (o *GetSalesTaxForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetSalesTaxForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxNotFound creates a GetSalesTaxNotFound with default headers values
func NewGetSalesTaxNotFound() *GetSalesTaxNotFound {
	return &GetSalesTaxNotFound{}
}

/*GetSalesTaxNotFound handles this case with default header values.

Object not found
*/
type GetSalesTaxNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetSalesTaxNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}][%d] getSalesTaxNotFound  %+v", 404, o.Payload)
}

func (o *GetSalesTaxNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetSalesTaxNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxTooManyRequests creates a GetSalesTaxTooManyRequests with default headers values
func NewGetSalesTaxTooManyRequests() *GetSalesTaxTooManyRequests {
	return &GetSalesTaxTooManyRequests{}
}

/*GetSalesTaxTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetSalesTaxTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetSalesTaxTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}][%d] getSalesTaxTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSalesTaxTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetSalesTaxTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
