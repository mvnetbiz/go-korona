// Code generated by go-swagger; DO NOT EDIT.

package sales_taxes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetSalesTaxesReader is a Reader for the GetSalesTaxes structure.
type GetSalesTaxesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSalesTaxesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSalesTaxesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetSalesTaxesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSalesTaxesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSalesTaxesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSalesTaxesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSalesTaxesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSalesTaxesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSalesTaxesOK creates a GetSalesTaxesOK with default headers values
func NewGetSalesTaxesOK() *GetSalesTaxesOK {
	return &GetSalesTaxesOK{}
}

/*GetSalesTaxesOK handles this case with default header values.

successful operation
*/
type GetSalesTaxesOK struct {
	Payload *models.ResultListSalesTax
}

func (o *GetSalesTaxesOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesOK  %+v", 200, o.Payload)
}

func (o *GetSalesTaxesOK) GetPayload() *models.ResultListSalesTax {
	return o.Payload
}

func (o *GetSalesTaxesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListSalesTax)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxesNoContent creates a GetSalesTaxesNoContent with default headers values
func NewGetSalesTaxesNoContent() *GetSalesTaxesNoContent {
	return &GetSalesTaxesNoContent{}
}

/*GetSalesTaxesNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetSalesTaxesNoContent struct {
}

func (o *GetSalesTaxesNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesNoContent ", 204)
}

func (o *GetSalesTaxesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSalesTaxesBadRequest creates a GetSalesTaxesBadRequest with default headers values
func NewGetSalesTaxesBadRequest() *GetSalesTaxesBadRequest {
	return &GetSalesTaxesBadRequest{}
}

/*GetSalesTaxesBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetSalesTaxesBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetSalesTaxesBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSalesTaxesBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetSalesTaxesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxesUnauthorized creates a GetSalesTaxesUnauthorized with default headers values
func NewGetSalesTaxesUnauthorized() *GetSalesTaxesUnauthorized {
	return &GetSalesTaxesUnauthorized{}
}

/*GetSalesTaxesUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetSalesTaxesUnauthorized struct {
}

func (o *GetSalesTaxesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesUnauthorized ", 401)
}

func (o *GetSalesTaxesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSalesTaxesForbidden creates a GetSalesTaxesForbidden with default headers values
func NewGetSalesTaxesForbidden() *GetSalesTaxesForbidden {
	return &GetSalesTaxesForbidden{}
}

/*GetSalesTaxesForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetSalesTaxesForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetSalesTaxesForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesForbidden  %+v", 403, o.Payload)
}

func (o *GetSalesTaxesForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetSalesTaxesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxesNotFound creates a GetSalesTaxesNotFound with default headers values
func NewGetSalesTaxesNotFound() *GetSalesTaxesNotFound {
	return &GetSalesTaxesNotFound{}
}

/*GetSalesTaxesNotFound handles this case with default header values.

Object not found
*/
type GetSalesTaxesNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetSalesTaxesNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesNotFound  %+v", 404, o.Payload)
}

func (o *GetSalesTaxesNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetSalesTaxesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSalesTaxesTooManyRequests creates a GetSalesTaxesTooManyRequests with default headers values
func NewGetSalesTaxesTooManyRequests() *GetSalesTaxesTooManyRequests {
	return &GetSalesTaxesTooManyRequests{}
}

/*GetSalesTaxesTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetSalesTaxesTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetSalesTaxesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/salesTaxes][%d] getSalesTaxesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSalesTaxesTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetSalesTaxesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
