// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// UpdateProductsReader is a Reader for the UpdateProducts structure.
type UpdateProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProductsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateProductsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateProductsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProductsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateProductsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateProductsOK creates a UpdateProductsOK with default headers values
func NewUpdateProductsOK() *UpdateProductsOK {
	return &UpdateProductsOK{}
}

/*UpdateProductsOK handles this case with default header values.

successful operation
*/
type UpdateProductsOK struct {
	Payload []*models.AddOrUpdateResult
}

func (o *UpdateProductsOK) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/products][%d] updateProductsOK  %+v", 200, o.Payload)
}

func (o *UpdateProductsOK) GetPayload() []*models.AddOrUpdateResult {
	return o.Payload
}

func (o *UpdateProductsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProductsBadRequest creates a UpdateProductsBadRequest with default headers values
func NewUpdateProductsBadRequest() *UpdateProductsBadRequest {
	return &UpdateProductsBadRequest{}
}

/*UpdateProductsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type UpdateProductsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *UpdateProductsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/products][%d] updateProductsBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateProductsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *UpdateProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProductsUnauthorized creates a UpdateProductsUnauthorized with default headers values
func NewUpdateProductsUnauthorized() *UpdateProductsUnauthorized {
	return &UpdateProductsUnauthorized{}
}

/*UpdateProductsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type UpdateProductsUnauthorized struct {
}

func (o *UpdateProductsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/products][%d] updateProductsUnauthorized ", 401)
}

func (o *UpdateProductsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProductsForbidden creates a UpdateProductsForbidden with default headers values
func NewUpdateProductsForbidden() *UpdateProductsForbidden {
	return &UpdateProductsForbidden{}
}

/*UpdateProductsForbidden handles this case with default header values.

Requested action is not allowed
*/
type UpdateProductsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *UpdateProductsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/products][%d] updateProductsForbidden  %+v", 403, o.Payload)
}

func (o *UpdateProductsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *UpdateProductsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProductsNotFound creates a UpdateProductsNotFound with default headers values
func NewUpdateProductsNotFound() *UpdateProductsNotFound {
	return &UpdateProductsNotFound{}
}

/*UpdateProductsNotFound handles this case with default header values.

Object not found
*/
type UpdateProductsNotFound struct {
	Payload *models.NotFoundError
}

func (o *UpdateProductsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/products][%d] updateProductsNotFound  %+v", 404, o.Payload)
}

func (o *UpdateProductsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *UpdateProductsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProductsTooManyRequests creates a UpdateProductsTooManyRequests with default headers values
func NewUpdateProductsTooManyRequests() *UpdateProductsTooManyRequests {
	return &UpdateProductsTooManyRequests{}
}

/*UpdateProductsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type UpdateProductsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *UpdateProductsTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /accounts/{koronaAccountId}/products][%d] updateProductsTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateProductsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *UpdateProductsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
