// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetProductsReader is a Reader for the GetProducts structure.
type GetProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProductsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetProductsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProductsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProductsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProductsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetProductsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProductsOK creates a GetProductsOK with default headers values
func NewGetProductsOK() *GetProductsOK {
	return &GetProductsOK{}
}

/*GetProductsOK handles this case with default header values.

successful operation
*/
type GetProductsOK struct {
	Payload *models.ResultListProduct
}

func (o *GetProductsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsOK  %+v", 200, o.Payload)
}

func (o *GetProductsOK) GetPayload() *models.ResultListProduct {
	return o.Payload
}

func (o *GetProductsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListProduct)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductsNoContent creates a GetProductsNoContent with default headers values
func NewGetProductsNoContent() *GetProductsNoContent {
	return &GetProductsNoContent{}
}

/*GetProductsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetProductsNoContent struct {
}

func (o *GetProductsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsNoContent ", 204)
}

func (o *GetProductsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductsBadRequest creates a GetProductsBadRequest with default headers values
func NewGetProductsBadRequest() *GetProductsBadRequest {
	return &GetProductsBadRequest{}
}

/*GetProductsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetProductsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetProductsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsBadRequest  %+v", 400, o.Payload)
}

func (o *GetProductsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductsUnauthorized creates a GetProductsUnauthorized with default headers values
func NewGetProductsUnauthorized() *GetProductsUnauthorized {
	return &GetProductsUnauthorized{}
}

/*GetProductsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetProductsUnauthorized struct {
}

func (o *GetProductsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsUnauthorized ", 401)
}

func (o *GetProductsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductsForbidden creates a GetProductsForbidden with default headers values
func NewGetProductsForbidden() *GetProductsForbidden {
	return &GetProductsForbidden{}
}

/*GetProductsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetProductsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetProductsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsForbidden  %+v", 403, o.Payload)
}

func (o *GetProductsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetProductsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductsNotFound creates a GetProductsNotFound with default headers values
func NewGetProductsNotFound() *GetProductsNotFound {
	return &GetProductsNotFound{}
}

/*GetProductsNotFound handles this case with default header values.

Object not found
*/
type GetProductsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetProductsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsNotFound  %+v", 404, o.Payload)
}

func (o *GetProductsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetProductsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProductsTooManyRequests creates a GetProductsTooManyRequests with default headers values
func NewGetProductsTooManyRequests() *GetProductsTooManyRequests {
	return &GetProductsTooManyRequests{}
}

/*GetProductsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetProductsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetProductsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/products][%d] getProductsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetProductsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetProductsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
