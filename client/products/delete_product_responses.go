// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteProductReader is a Reader for the DeleteProduct structure.
type DeleteProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteProductNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProductBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteProductUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProductForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteProductTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteProductNoContent creates a DeleteProductNoContent with default headers values
func NewDeleteProductNoContent() *DeleteProductNoContent {
	return &DeleteProductNoContent{}
}

/*DeleteProductNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type DeleteProductNoContent struct {
}

func (o *DeleteProductNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/products/{productId}][%d] deleteProductNoContent ", 204)
}

func (o *DeleteProductNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductBadRequest creates a DeleteProductBadRequest with default headers values
func NewDeleteProductBadRequest() *DeleteProductBadRequest {
	return &DeleteProductBadRequest{}
}

/*DeleteProductBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteProductBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteProductBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/products/{productId}][%d] deleteProductBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProductBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteProductBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductUnauthorized creates a DeleteProductUnauthorized with default headers values
func NewDeleteProductUnauthorized() *DeleteProductUnauthorized {
	return &DeleteProductUnauthorized{}
}

/*DeleteProductUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteProductUnauthorized struct {
}

func (o *DeleteProductUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/products/{productId}][%d] deleteProductUnauthorized ", 401)
}

func (o *DeleteProductUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductForbidden creates a DeleteProductForbidden with default headers values
func NewDeleteProductForbidden() *DeleteProductForbidden {
	return &DeleteProductForbidden{}
}

/*DeleteProductForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteProductForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteProductForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/products/{productId}][%d] deleteProductForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProductForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteProductForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductNotFound creates a DeleteProductNotFound with default headers values
func NewDeleteProductNotFound() *DeleteProductNotFound {
	return &DeleteProductNotFound{}
}

/*DeleteProductNotFound handles this case with default header values.

Object not found
*/
type DeleteProductNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteProductNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/products/{productId}][%d] deleteProductNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProductNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductTooManyRequests creates a DeleteProductTooManyRequests with default headers values
func NewDeleteProductTooManyRequests() *DeleteProductTooManyRequests {
	return &DeleteProductTooManyRequests{}
}

/*DeleteProductTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteProductTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteProductTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/products/{productId}][%d] deleteProductTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteProductTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteProductTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
