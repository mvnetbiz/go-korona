// Code generated by go-swagger; DO NOT EDIT.

package statistics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRevenueParams creates a new GetRevenueParams object
// with the default values initialized.
func NewGetRevenueParams() *GetRevenueParams {
	var ()
	return &GetRevenueParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRevenueParamsWithTimeout creates a new GetRevenueParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRevenueParamsWithTimeout(timeout time.Duration) *GetRevenueParams {
	var ()
	return &GetRevenueParams{

		timeout: timeout,
	}
}

// NewGetRevenueParamsWithContext creates a new GetRevenueParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRevenueParamsWithContext(ctx context.Context) *GetRevenueParams {
	var ()
	return &GetRevenueParams{

		Context: ctx,
	}
}

// NewGetRevenueParamsWithHTTPClient creates a new GetRevenueParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRevenueParamsWithHTTPClient(client *http.Client) *GetRevenueParams {
	var ()
	return &GetRevenueParams{
		HTTPClient: client,
	}
}

/*GetRevenueParams contains all the parameters to send to the API endpoint
for the get revenue operation typically these are written to a http.Request
*/
type GetRevenueParams struct {

	/*KoronaAccountID
	  account id of the KORONA.cloud account

	*/
	KoronaAccountID string
	/*OrganizationalUnit
	  number of the organizational unit

	*/
	OrganizationalUnit *string
	/*Period
	  time period for comparison

	*/
	Period *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get revenue params
func (o *GetRevenueParams) WithTimeout(timeout time.Duration) *GetRevenueParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get revenue params
func (o *GetRevenueParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get revenue params
func (o *GetRevenueParams) WithContext(ctx context.Context) *GetRevenueParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get revenue params
func (o *GetRevenueParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get revenue params
func (o *GetRevenueParams) WithHTTPClient(client *http.Client) *GetRevenueParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get revenue params
func (o *GetRevenueParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKoronaAccountID adds the koronaAccountID to the get revenue params
func (o *GetRevenueParams) WithKoronaAccountID(koronaAccountID string) *GetRevenueParams {
	o.SetKoronaAccountID(koronaAccountID)
	return o
}

// SetKoronaAccountID adds the koronaAccountId to the get revenue params
func (o *GetRevenueParams) SetKoronaAccountID(koronaAccountID string) {
	o.KoronaAccountID = koronaAccountID
}

// WithOrganizationalUnit adds the organizationalUnit to the get revenue params
func (o *GetRevenueParams) WithOrganizationalUnit(organizationalUnit *string) *GetRevenueParams {
	o.SetOrganizationalUnit(organizationalUnit)
	return o
}

// SetOrganizationalUnit adds the organizationalUnit to the get revenue params
func (o *GetRevenueParams) SetOrganizationalUnit(organizationalUnit *string) {
	o.OrganizationalUnit = organizationalUnit
}

// WithPeriod adds the period to the get revenue params
func (o *GetRevenueParams) WithPeriod(period *string) *GetRevenueParams {
	o.SetPeriod(period)
	return o
}

// SetPeriod adds the period to the get revenue params
func (o *GetRevenueParams) SetPeriod(period *string) {
	o.Period = period
}

// WriteToRequest writes these params to a swagger request
func (o *GetRevenueParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param koronaAccountId
	if err := r.SetPathParam("koronaAccountId", o.KoronaAccountID); err != nil {
		return err
	}

	if o.OrganizationalUnit != nil {

		// query param organizationalUnit
		var qrOrganizationalUnit string
		if o.OrganizationalUnit != nil {
			qrOrganizationalUnit = *o.OrganizationalUnit
		}
		qOrganizationalUnit := qrOrganizationalUnit
		if qOrganizationalUnit != "" {
			if err := r.SetQueryParam("organizationalUnit", qOrganizationalUnit); err != nil {
				return err
			}
		}

	}

	if o.Period != nil {

		// query param period
		var qrPeriod string
		if o.Period != nil {
			qrPeriod = *o.Period
		}
		qPeriod := qrPeriod
		if qPeriod != "" {
			if err := r.SetQueryParam("period", qPeriod); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
