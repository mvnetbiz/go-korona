// Code generated by go-swagger; DO NOT EDIT.

package time_tracking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetEntitiesReader is a Reader for the GetEntities structure.
type GetEntitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEntitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEntitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetEntitiesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEntitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEntitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEntitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEntitiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetEntitiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEntitiesOK creates a GetEntitiesOK with default headers values
func NewGetEntitiesOK() *GetEntitiesOK {
	return &GetEntitiesOK{}
}

/*GetEntitiesOK handles this case with default header values.

successful operation
*/
type GetEntitiesOK struct {
	Payload *models.ResultListTimeTrackingEntity
}

func (o *GetEntitiesOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesOK  %+v", 200, o.Payload)
}

func (o *GetEntitiesOK) GetPayload() *models.ResultListTimeTrackingEntity {
	return o.Payload
}

func (o *GetEntitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListTimeTrackingEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntitiesNoContent creates a GetEntitiesNoContent with default headers values
func NewGetEntitiesNoContent() *GetEntitiesNoContent {
	return &GetEntitiesNoContent{}
}

/*GetEntitiesNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetEntitiesNoContent struct {
}

func (o *GetEntitiesNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesNoContent ", 204)
}

func (o *GetEntitiesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEntitiesBadRequest creates a GetEntitiesBadRequest with default headers values
func NewGetEntitiesBadRequest() *GetEntitiesBadRequest {
	return &GetEntitiesBadRequest{}
}

/*GetEntitiesBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetEntitiesBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetEntitiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetEntitiesBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetEntitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntitiesUnauthorized creates a GetEntitiesUnauthorized with default headers values
func NewGetEntitiesUnauthorized() *GetEntitiesUnauthorized {
	return &GetEntitiesUnauthorized{}
}

/*GetEntitiesUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetEntitiesUnauthorized struct {
}

func (o *GetEntitiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesUnauthorized ", 401)
}

func (o *GetEntitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEntitiesForbidden creates a GetEntitiesForbidden with default headers values
func NewGetEntitiesForbidden() *GetEntitiesForbidden {
	return &GetEntitiesForbidden{}
}

/*GetEntitiesForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetEntitiesForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetEntitiesForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesForbidden  %+v", 403, o.Payload)
}

func (o *GetEntitiesForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetEntitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntitiesNotFound creates a GetEntitiesNotFound with default headers values
func NewGetEntitiesNotFound() *GetEntitiesNotFound {
	return &GetEntitiesNotFound{}
}

/*GetEntitiesNotFound handles this case with default header values.

Object not found
*/
type GetEntitiesNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetEntitiesNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesNotFound  %+v", 404, o.Payload)
}

func (o *GetEntitiesNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetEntitiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntitiesTooManyRequests creates a GetEntitiesTooManyRequests with default headers values
func NewGetEntitiesTooManyRequests() *GetEntitiesTooManyRequests {
	return &GetEntitiesTooManyRequests{}
}

/*GetEntitiesTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetEntitiesTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetEntitiesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/timeTrackingEntities][%d] getEntitiesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetEntitiesTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetEntitiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
