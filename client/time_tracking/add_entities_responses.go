// Code generated by go-swagger; DO NOT EDIT.

package time_tracking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// AddEntitiesReader is a Reader for the AddEntities structure.
type AddEntitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddEntitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddEntitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddEntitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddEntitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddEntitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddEntitiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddEntitiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddEntitiesOK creates a AddEntitiesOK with default headers values
func NewAddEntitiesOK() *AddEntitiesOK {
	return &AddEntitiesOK{}
}

/*AddEntitiesOK handles this case with default header values.

successful operation
*/
type AddEntitiesOK struct {
	Payload []*models.AddOrUpdateResult
}

func (o *AddEntitiesOK) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/timeTrackingEntities][%d] addEntitiesOK  %+v", 200, o.Payload)
}

func (o *AddEntitiesOK) GetPayload() []*models.AddOrUpdateResult {
	return o.Payload
}

func (o *AddEntitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddEntitiesBadRequest creates a AddEntitiesBadRequest with default headers values
func NewAddEntitiesBadRequest() *AddEntitiesBadRequest {
	return &AddEntitiesBadRequest{}
}

/*AddEntitiesBadRequest handles this case with default header values.

Malformed querystring or model
*/
type AddEntitiesBadRequest struct {
	Payload *models.BadRequestError
}

func (o *AddEntitiesBadRequest) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/timeTrackingEntities][%d] addEntitiesBadRequest  %+v", 400, o.Payload)
}

func (o *AddEntitiesBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *AddEntitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddEntitiesUnauthorized creates a AddEntitiesUnauthorized with default headers values
func NewAddEntitiesUnauthorized() *AddEntitiesUnauthorized {
	return &AddEntitiesUnauthorized{}
}

/*AddEntitiesUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type AddEntitiesUnauthorized struct {
}

func (o *AddEntitiesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/timeTrackingEntities][%d] addEntitiesUnauthorized ", 401)
}

func (o *AddEntitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEntitiesForbidden creates a AddEntitiesForbidden with default headers values
func NewAddEntitiesForbidden() *AddEntitiesForbidden {
	return &AddEntitiesForbidden{}
}

/*AddEntitiesForbidden handles this case with default header values.

Requested action is not allowed
*/
type AddEntitiesForbidden struct {
	Payload *models.ForbiddenError
}

func (o *AddEntitiesForbidden) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/timeTrackingEntities][%d] addEntitiesForbidden  %+v", 403, o.Payload)
}

func (o *AddEntitiesForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *AddEntitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddEntitiesNotFound creates a AddEntitiesNotFound with default headers values
func NewAddEntitiesNotFound() *AddEntitiesNotFound {
	return &AddEntitiesNotFound{}
}

/*AddEntitiesNotFound handles this case with default header values.

Object not found
*/
type AddEntitiesNotFound struct {
	Payload *models.NotFoundError
}

func (o *AddEntitiesNotFound) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/timeTrackingEntities][%d] addEntitiesNotFound  %+v", 404, o.Payload)
}

func (o *AddEntitiesNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *AddEntitiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddEntitiesTooManyRequests creates a AddEntitiesTooManyRequests with default headers values
func NewAddEntitiesTooManyRequests() *AddEntitiesTooManyRequests {
	return &AddEntitiesTooManyRequests{}
}

/*AddEntitiesTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type AddEntitiesTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *AddEntitiesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/timeTrackingEntities][%d] addEntitiesTooManyRequests  %+v", 429, o.Payload)
}

func (o *AddEntitiesTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *AddEntitiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
