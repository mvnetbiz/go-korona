// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetAccountsReader is a Reader for the GetAccounts structure.
type GetAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetAccountsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAccountsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAccountsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountsOK creates a GetAccountsOK with default headers values
func NewGetAccountsOK() *GetAccountsOK {
	return &GetAccountsOK{}
}

/*GetAccountsOK handles this case with default header values.

successful operation
*/
type GetAccountsOK struct {
	Payload *models.ResultListAccount
}

func (o *GetAccountsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsOK  %+v", 200, o.Payload)
}

func (o *GetAccountsOK) GetPayload() *models.ResultListAccount {
	return o.Payload
}

func (o *GetAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsNoContent creates a GetAccountsNoContent with default headers values
func NewGetAccountsNoContent() *GetAccountsNoContent {
	return &GetAccountsNoContent{}
}

/*GetAccountsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetAccountsNoContent struct {
}

func (o *GetAccountsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsNoContent ", 204)
}

func (o *GetAccountsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountsBadRequest creates a GetAccountsBadRequest with default headers values
func NewGetAccountsBadRequest() *GetAccountsBadRequest {
	return &GetAccountsBadRequest{}
}

/*GetAccountsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetAccountsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetAccountsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsUnauthorized creates a GetAccountsUnauthorized with default headers values
func NewGetAccountsUnauthorized() *GetAccountsUnauthorized {
	return &GetAccountsUnauthorized{}
}

/*GetAccountsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetAccountsUnauthorized struct {
}

func (o *GetAccountsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsUnauthorized ", 401)
}

func (o *GetAccountsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountsForbidden creates a GetAccountsForbidden with default headers values
func NewGetAccountsForbidden() *GetAccountsForbidden {
	return &GetAccountsForbidden{}
}

/*GetAccountsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetAccountsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetAccountsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsNotFound creates a GetAccountsNotFound with default headers values
func NewGetAccountsNotFound() *GetAccountsNotFound {
	return &GetAccountsNotFound{}
}

/*GetAccountsNotFound handles this case with default header values.

Object not found
*/
type GetAccountsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetAccountsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsTooManyRequests creates a GetAccountsTooManyRequests with default headers values
func NewGetAccountsTooManyRequests() *GetAccountsTooManyRequests {
	return &GetAccountsTooManyRequests{}
}

/*GetAccountsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetAccountsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetAccountsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/accounts][%d] getAccountsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAccountsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetAccountsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
