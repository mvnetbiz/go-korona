// Code generated by go-swagger; DO NOT EDIT.

package cashiers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetCashiersReader is a Reader for the GetCashiers structure.
type GetCashiersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCashiersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCashiersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetCashiersNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCashiersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCashiersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCashiersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCashiersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCashiersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCashiersOK creates a GetCashiersOK with default headers values
func NewGetCashiersOK() *GetCashiersOK {
	return &GetCashiersOK{}
}

/*GetCashiersOK handles this case with default header values.

successful operation
*/
type GetCashiersOK struct {
	Payload *models.ResultListCashier
}

func (o *GetCashiersOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersOK  %+v", 200, o.Payload)
}

func (o *GetCashiersOK) GetPayload() *models.ResultListCashier {
	return o.Payload
}

func (o *GetCashiersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListCashier)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCashiersNoContent creates a GetCashiersNoContent with default headers values
func NewGetCashiersNoContent() *GetCashiersNoContent {
	return &GetCashiersNoContent{}
}

/*GetCashiersNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetCashiersNoContent struct {
}

func (o *GetCashiersNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersNoContent ", 204)
}

func (o *GetCashiersNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCashiersBadRequest creates a GetCashiersBadRequest with default headers values
func NewGetCashiersBadRequest() *GetCashiersBadRequest {
	return &GetCashiersBadRequest{}
}

/*GetCashiersBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetCashiersBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCashiersBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCashiersBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCashiersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCashiersUnauthorized creates a GetCashiersUnauthorized with default headers values
func NewGetCashiersUnauthorized() *GetCashiersUnauthorized {
	return &GetCashiersUnauthorized{}
}

/*GetCashiersUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetCashiersUnauthorized struct {
}

func (o *GetCashiersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersUnauthorized ", 401)
}

func (o *GetCashiersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCashiersForbidden creates a GetCashiersForbidden with default headers values
func NewGetCashiersForbidden() *GetCashiersForbidden {
	return &GetCashiersForbidden{}
}

/*GetCashiersForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetCashiersForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetCashiersForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersForbidden  %+v", 403, o.Payload)
}

func (o *GetCashiersForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetCashiersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCashiersNotFound creates a GetCashiersNotFound with default headers values
func NewGetCashiersNotFound() *GetCashiersNotFound {
	return &GetCashiersNotFound{}
}

/*GetCashiersNotFound handles this case with default header values.

Object not found
*/
type GetCashiersNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCashiersNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersNotFound  %+v", 404, o.Payload)
}

func (o *GetCashiersNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCashiersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCashiersTooManyRequests creates a GetCashiersTooManyRequests with default headers values
func NewGetCashiersTooManyRequests() *GetCashiersTooManyRequests {
	return &GetCashiersTooManyRequests{}
}

/*GetCashiersTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetCashiersTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetCashiersTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/cashiers][%d] getCashiersTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCashiersTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetCashiersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
