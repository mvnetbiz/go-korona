// Code generated by go-swagger; DO NOT EDIT.

package organizational_units

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetOrganizationalUnitStockReceiptsReader is a Reader for the GetOrganizationalUnitStockReceipts structure.
type GetOrganizationalUnitStockReceiptsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationalUnitStockReceiptsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationalUnitStockReceiptsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetOrganizationalUnitStockReceiptsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationalUnitStockReceiptsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrganizationalUnitStockReceiptsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationalUnitStockReceiptsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationalUnitStockReceiptsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrganizationalUnitStockReceiptsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrganizationalUnitStockReceiptsOK creates a GetOrganizationalUnitStockReceiptsOK with default headers values
func NewGetOrganizationalUnitStockReceiptsOK() *GetOrganizationalUnitStockReceiptsOK {
	return &GetOrganizationalUnitStockReceiptsOK{}
}

/*GetOrganizationalUnitStockReceiptsOK handles this case with default header values.

successful operation
*/
type GetOrganizationalUnitStockReceiptsOK struct {
	Payload *models.ResultListStockReceipt
}

func (o *GetOrganizationalUnitStockReceiptsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationalUnitStockReceiptsOK) GetPayload() *models.ResultListStockReceipt {
	return o.Payload
}

func (o *GetOrganizationalUnitStockReceiptsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListStockReceipt)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitStockReceiptsNoContent creates a GetOrganizationalUnitStockReceiptsNoContent with default headers values
func NewGetOrganizationalUnitStockReceiptsNoContent() *GetOrganizationalUnitStockReceiptsNoContent {
	return &GetOrganizationalUnitStockReceiptsNoContent{}
}

/*GetOrganizationalUnitStockReceiptsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetOrganizationalUnitStockReceiptsNoContent struct {
}

func (o *GetOrganizationalUnitStockReceiptsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsNoContent ", 204)
}

func (o *GetOrganizationalUnitStockReceiptsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationalUnitStockReceiptsBadRequest creates a GetOrganizationalUnitStockReceiptsBadRequest with default headers values
func NewGetOrganizationalUnitStockReceiptsBadRequest() *GetOrganizationalUnitStockReceiptsBadRequest {
	return &GetOrganizationalUnitStockReceiptsBadRequest{}
}

/*GetOrganizationalUnitStockReceiptsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetOrganizationalUnitStockReceiptsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetOrganizationalUnitStockReceiptsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationalUnitStockReceiptsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetOrganizationalUnitStockReceiptsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitStockReceiptsUnauthorized creates a GetOrganizationalUnitStockReceiptsUnauthorized with default headers values
func NewGetOrganizationalUnitStockReceiptsUnauthorized() *GetOrganizationalUnitStockReceiptsUnauthorized {
	return &GetOrganizationalUnitStockReceiptsUnauthorized{}
}

/*GetOrganizationalUnitStockReceiptsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetOrganizationalUnitStockReceiptsUnauthorized struct {
}

func (o *GetOrganizationalUnitStockReceiptsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsUnauthorized ", 401)
}

func (o *GetOrganizationalUnitStockReceiptsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationalUnitStockReceiptsForbidden creates a GetOrganizationalUnitStockReceiptsForbidden with default headers values
func NewGetOrganizationalUnitStockReceiptsForbidden() *GetOrganizationalUnitStockReceiptsForbidden {
	return &GetOrganizationalUnitStockReceiptsForbidden{}
}

/*GetOrganizationalUnitStockReceiptsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetOrganizationalUnitStockReceiptsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetOrganizationalUnitStockReceiptsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationalUnitStockReceiptsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetOrganizationalUnitStockReceiptsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitStockReceiptsNotFound creates a GetOrganizationalUnitStockReceiptsNotFound with default headers values
func NewGetOrganizationalUnitStockReceiptsNotFound() *GetOrganizationalUnitStockReceiptsNotFound {
	return &GetOrganizationalUnitStockReceiptsNotFound{}
}

/*GetOrganizationalUnitStockReceiptsNotFound handles this case with default header values.

Object not found
*/
type GetOrganizationalUnitStockReceiptsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetOrganizationalUnitStockReceiptsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationalUnitStockReceiptsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetOrganizationalUnitStockReceiptsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitStockReceiptsTooManyRequests creates a GetOrganizationalUnitStockReceiptsTooManyRequests with default headers values
func NewGetOrganizationalUnitStockReceiptsTooManyRequests() *GetOrganizationalUnitStockReceiptsTooManyRequests {
	return &GetOrganizationalUnitStockReceiptsTooManyRequests{}
}

/*GetOrganizationalUnitStockReceiptsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetOrganizationalUnitStockReceiptsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetOrganizationalUnitStockReceiptsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts][%d] getOrganizationalUnitStockReceiptsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrganizationalUnitStockReceiptsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetOrganizationalUnitStockReceiptsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
