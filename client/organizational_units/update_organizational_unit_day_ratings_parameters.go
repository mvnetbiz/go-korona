// Code generated by go-swagger; DO NOT EDIT.

package organizational_units

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// NewUpdateOrganizationalUnitDayRatingsParams creates a new UpdateOrganizationalUnitDayRatingsParams object
// with the default values initialized.
func NewUpdateOrganizationalUnitDayRatingsParams() *UpdateOrganizationalUnitDayRatingsParams {
	var ()
	return &UpdateOrganizationalUnitDayRatingsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrganizationalUnitDayRatingsParamsWithTimeout creates a new UpdateOrganizationalUnitDayRatingsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateOrganizationalUnitDayRatingsParamsWithTimeout(timeout time.Duration) *UpdateOrganizationalUnitDayRatingsParams {
	var ()
	return &UpdateOrganizationalUnitDayRatingsParams{

		timeout: timeout,
	}
}

// NewUpdateOrganizationalUnitDayRatingsParamsWithContext creates a new UpdateOrganizationalUnitDayRatingsParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateOrganizationalUnitDayRatingsParamsWithContext(ctx context.Context) *UpdateOrganizationalUnitDayRatingsParams {
	var ()
	return &UpdateOrganizationalUnitDayRatingsParams{

		Context: ctx,
	}
}

// NewUpdateOrganizationalUnitDayRatingsParamsWithHTTPClient creates a new UpdateOrganizationalUnitDayRatingsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateOrganizationalUnitDayRatingsParamsWithHTTPClient(client *http.Client) *UpdateOrganizationalUnitDayRatingsParams {
	var ()
	return &UpdateOrganizationalUnitDayRatingsParams{
		HTTPClient: client,
	}
}

/*UpdateOrganizationalUnitDayRatingsParams contains all the parameters to send to the API endpoint
for the update organizational unit day ratings operation typically these are written to a http.Request
*/
type UpdateOrganizationalUnitDayRatingsParams struct {

	/*Body
	  an array of new day ratings

	*/
	Body []*models.DayRating
	/*KoronaAccountID
	  account id of the KORONA.cloud account

	*/
	KoronaAccountID string
	/*OrganizationalUnitID
	  id of the related object (important: id should match the uuid-format)

	*/
	OrganizationalUnitID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) WithTimeout(timeout time.Duration) *UpdateOrganizationalUnitDayRatingsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) WithContext(ctx context.Context) *UpdateOrganizationalUnitDayRatingsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) WithHTTPClient(client *http.Client) *UpdateOrganizationalUnitDayRatingsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) WithBody(body []*models.DayRating) *UpdateOrganizationalUnitDayRatingsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) SetBody(body []*models.DayRating) {
	o.Body = body
}

// WithKoronaAccountID adds the koronaAccountID to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) WithKoronaAccountID(koronaAccountID string) *UpdateOrganizationalUnitDayRatingsParams {
	o.SetKoronaAccountID(koronaAccountID)
	return o
}

// SetKoronaAccountID adds the koronaAccountId to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) SetKoronaAccountID(koronaAccountID string) {
	o.KoronaAccountID = koronaAccountID
}

// WithOrganizationalUnitID adds the organizationalUnitID to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) WithOrganizationalUnitID(organizationalUnitID string) *UpdateOrganizationalUnitDayRatingsParams {
	o.SetOrganizationalUnitID(organizationalUnitID)
	return o
}

// SetOrganizationalUnitID adds the organizationalUnitId to the update organizational unit day ratings params
func (o *UpdateOrganizationalUnitDayRatingsParams) SetOrganizationalUnitID(organizationalUnitID string) {
	o.OrganizationalUnitID = organizationalUnitID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrganizationalUnitDayRatingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param koronaAccountId
	if err := r.SetPathParam("koronaAccountId", o.KoronaAccountID); err != nil {
		return err
	}

	// path param organizationalUnitId
	if err := r.SetPathParam("organizationalUnitId", o.OrganizationalUnitID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
