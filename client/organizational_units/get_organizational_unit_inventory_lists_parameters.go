// Code generated by go-swagger; DO NOT EDIT.

package organizational_units

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationalUnitInventoryListsParams creates a new GetOrganizationalUnitInventoryListsParams object
// with the default values initialized.
func NewGetOrganizationalUnitInventoryListsParams() *GetOrganizationalUnitInventoryListsParams {
	var ()
	return &GetOrganizationalUnitInventoryListsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationalUnitInventoryListsParamsWithTimeout creates a new GetOrganizationalUnitInventoryListsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOrganizationalUnitInventoryListsParamsWithTimeout(timeout time.Duration) *GetOrganizationalUnitInventoryListsParams {
	var ()
	return &GetOrganizationalUnitInventoryListsParams{

		timeout: timeout,
	}
}

// NewGetOrganizationalUnitInventoryListsParamsWithContext creates a new GetOrganizationalUnitInventoryListsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOrganizationalUnitInventoryListsParamsWithContext(ctx context.Context) *GetOrganizationalUnitInventoryListsParams {
	var ()
	return &GetOrganizationalUnitInventoryListsParams{

		Context: ctx,
	}
}

// NewGetOrganizationalUnitInventoryListsParamsWithHTTPClient creates a new GetOrganizationalUnitInventoryListsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOrganizationalUnitInventoryListsParamsWithHTTPClient(client *http.Client) *GetOrganizationalUnitInventoryListsParams {
	var ()
	return &GetOrganizationalUnitInventoryListsParams{
		HTTPClient: client,
	}
}

/*GetOrganizationalUnitInventoryListsParams contains all the parameters to send to the API endpoint
for the get organizational unit inventory lists operation typically these are written to a http.Request
*/
type GetOrganizationalUnitInventoryListsParams struct {

	/*BookingStatus
	  booking status (possible values: BOOKED, IN_PROGRESS)

	*/
	BookingStatus *string
	/*IncludeDeleted
	  indicates deleted objects should be loaded or not (default: false)

	*/
	IncludeDeleted *bool
	/*KoronaAccountID
	  account id of the KORONA.cloud account

	*/
	KoronaAccountID string
	/*MaxBookingTime
	  max (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)

	*/
	MaxBookingTime *strfmt.DateTime
	/*MaxCreateTime
	  max (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)

	*/
	MaxCreateTime *strfmt.DateTime
	/*MinBookingTime
	  min (inclusive) booking time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)

	*/
	MinBookingTime *strfmt.DateTime
	/*MinCreateTime
	  min (inclusive) create time of the receipt (ISO 8601; Format: YYYY-MM-DDTHH:MM:SS; timezone optional)

	*/
	MinCreateTime *strfmt.DateTime
	/*OrganizationalUnitID
	  id of the related object (important: id should match the uuid-format)

	*/
	OrganizationalUnitID string
	/*Page
	  number of the page to fetch

	*/
	Page *int32
	/*Revision
	  last revision number, objects with a greater revision than this will be returned

	*/
	Revision *int64
	/*Size
	  amount of objects to return per page

	*/
	Size *int32
	/*Sort
	  attribute to sort by (multiple separated by comma; max. 5)

	*/
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithTimeout(timeout time.Duration) *GetOrganizationalUnitInventoryListsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithContext(ctx context.Context) *GetOrganizationalUnitInventoryListsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithHTTPClient(client *http.Client) *GetOrganizationalUnitInventoryListsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBookingStatus adds the bookingStatus to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithBookingStatus(bookingStatus *string) *GetOrganizationalUnitInventoryListsParams {
	o.SetBookingStatus(bookingStatus)
	return o
}

// SetBookingStatus adds the bookingStatus to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetBookingStatus(bookingStatus *string) {
	o.BookingStatus = bookingStatus
}

// WithIncludeDeleted adds the includeDeleted to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithIncludeDeleted(includeDeleted *bool) *GetOrganizationalUnitInventoryListsParams {
	o.SetIncludeDeleted(includeDeleted)
	return o
}

// SetIncludeDeleted adds the includeDeleted to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetIncludeDeleted(includeDeleted *bool) {
	o.IncludeDeleted = includeDeleted
}

// WithKoronaAccountID adds the koronaAccountID to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithKoronaAccountID(koronaAccountID string) *GetOrganizationalUnitInventoryListsParams {
	o.SetKoronaAccountID(koronaAccountID)
	return o
}

// SetKoronaAccountID adds the koronaAccountId to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetKoronaAccountID(koronaAccountID string) {
	o.KoronaAccountID = koronaAccountID
}

// WithMaxBookingTime adds the maxBookingTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithMaxBookingTime(maxBookingTime *strfmt.DateTime) *GetOrganizationalUnitInventoryListsParams {
	o.SetMaxBookingTime(maxBookingTime)
	return o
}

// SetMaxBookingTime adds the maxBookingTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetMaxBookingTime(maxBookingTime *strfmt.DateTime) {
	o.MaxBookingTime = maxBookingTime
}

// WithMaxCreateTime adds the maxCreateTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithMaxCreateTime(maxCreateTime *strfmt.DateTime) *GetOrganizationalUnitInventoryListsParams {
	o.SetMaxCreateTime(maxCreateTime)
	return o
}

// SetMaxCreateTime adds the maxCreateTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetMaxCreateTime(maxCreateTime *strfmt.DateTime) {
	o.MaxCreateTime = maxCreateTime
}

// WithMinBookingTime adds the minBookingTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithMinBookingTime(minBookingTime *strfmt.DateTime) *GetOrganizationalUnitInventoryListsParams {
	o.SetMinBookingTime(minBookingTime)
	return o
}

// SetMinBookingTime adds the minBookingTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetMinBookingTime(minBookingTime *strfmt.DateTime) {
	o.MinBookingTime = minBookingTime
}

// WithMinCreateTime adds the minCreateTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithMinCreateTime(minCreateTime *strfmt.DateTime) *GetOrganizationalUnitInventoryListsParams {
	o.SetMinCreateTime(minCreateTime)
	return o
}

// SetMinCreateTime adds the minCreateTime to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetMinCreateTime(minCreateTime *strfmt.DateTime) {
	o.MinCreateTime = minCreateTime
}

// WithOrganizationalUnitID adds the organizationalUnitID to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithOrganizationalUnitID(organizationalUnitID string) *GetOrganizationalUnitInventoryListsParams {
	o.SetOrganizationalUnitID(organizationalUnitID)
	return o
}

// SetOrganizationalUnitID adds the organizationalUnitId to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetOrganizationalUnitID(organizationalUnitID string) {
	o.OrganizationalUnitID = organizationalUnitID
}

// WithPage adds the page to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithPage(page *int32) *GetOrganizationalUnitInventoryListsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetPage(page *int32) {
	o.Page = page
}

// WithRevision adds the revision to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithRevision(revision *int64) *GetOrganizationalUnitInventoryListsParams {
	o.SetRevision(revision)
	return o
}

// SetRevision adds the revision to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetRevision(revision *int64) {
	o.Revision = revision
}

// WithSize adds the size to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithSize(size *int32) *GetOrganizationalUnitInventoryListsParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetSize(size *int32) {
	o.Size = size
}

// WithSort adds the sort to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) WithSort(sort *string) *GetOrganizationalUnitInventoryListsParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get organizational unit inventory lists params
func (o *GetOrganizationalUnitInventoryListsParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationalUnitInventoryListsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BookingStatus != nil {

		// query param bookingStatus
		var qrBookingStatus string
		if o.BookingStatus != nil {
			qrBookingStatus = *o.BookingStatus
		}
		qBookingStatus := qrBookingStatus
		if qBookingStatus != "" {
			if err := r.SetQueryParam("bookingStatus", qBookingStatus); err != nil {
				return err
			}
		}

	}

	if o.IncludeDeleted != nil {

		// query param includeDeleted
		var qrIncludeDeleted bool
		if o.IncludeDeleted != nil {
			qrIncludeDeleted = *o.IncludeDeleted
		}
		qIncludeDeleted := swag.FormatBool(qrIncludeDeleted)
		if qIncludeDeleted != "" {
			if err := r.SetQueryParam("includeDeleted", qIncludeDeleted); err != nil {
				return err
			}
		}

	}

	// path param koronaAccountId
	if err := r.SetPathParam("koronaAccountId", o.KoronaAccountID); err != nil {
		return err
	}

	if o.MaxBookingTime != nil {

		// query param maxBookingTime
		var qrMaxBookingTime strfmt.DateTime
		if o.MaxBookingTime != nil {
			qrMaxBookingTime = *o.MaxBookingTime
		}
		qMaxBookingTime := qrMaxBookingTime.String()
		if qMaxBookingTime != "" {
			if err := r.SetQueryParam("maxBookingTime", qMaxBookingTime); err != nil {
				return err
			}
		}

	}

	if o.MaxCreateTime != nil {

		// query param maxCreateTime
		var qrMaxCreateTime strfmt.DateTime
		if o.MaxCreateTime != nil {
			qrMaxCreateTime = *o.MaxCreateTime
		}
		qMaxCreateTime := qrMaxCreateTime.String()
		if qMaxCreateTime != "" {
			if err := r.SetQueryParam("maxCreateTime", qMaxCreateTime); err != nil {
				return err
			}
		}

	}

	if o.MinBookingTime != nil {

		// query param minBookingTime
		var qrMinBookingTime strfmt.DateTime
		if o.MinBookingTime != nil {
			qrMinBookingTime = *o.MinBookingTime
		}
		qMinBookingTime := qrMinBookingTime.String()
		if qMinBookingTime != "" {
			if err := r.SetQueryParam("minBookingTime", qMinBookingTime); err != nil {
				return err
			}
		}

	}

	if o.MinCreateTime != nil {

		// query param minCreateTime
		var qrMinCreateTime strfmt.DateTime
		if o.MinCreateTime != nil {
			qrMinCreateTime = *o.MinCreateTime
		}
		qMinCreateTime := qrMinCreateTime.String()
		if qMinCreateTime != "" {
			if err := r.SetQueryParam("minCreateTime", qMinCreateTime); err != nil {
				return err
			}
		}

	}

	// path param organizationalUnitId
	if err := r.SetPathParam("organizationalUnitId", o.OrganizationalUnitID); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int32
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt32(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.Revision != nil {

		// query param revision
		var qrRevision int64
		if o.Revision != nil {
			qrRevision = *o.Revision
		}
		qRevision := swag.FormatInt64(qrRevision)
		if qRevision != "" {
			if err := r.SetQueryParam("revision", qRevision); err != nil {
				return err
			}
		}

	}

	if o.Size != nil {

		// query param size
		var qrSize int32
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt32(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	if o.Sort != nil {

		// query param sort
		var qrSort string
		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {
			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
