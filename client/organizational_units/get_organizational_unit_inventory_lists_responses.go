// Code generated by go-swagger; DO NOT EDIT.

package organizational_units

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetOrganizationalUnitInventoryListsReader is a Reader for the GetOrganizationalUnitInventoryLists structure.
type GetOrganizationalUnitInventoryListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationalUnitInventoryListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationalUnitInventoryListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetOrganizationalUnitInventoryListsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationalUnitInventoryListsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrganizationalUnitInventoryListsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationalUnitInventoryListsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationalUnitInventoryListsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrganizationalUnitInventoryListsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrganizationalUnitInventoryListsOK creates a GetOrganizationalUnitInventoryListsOK with default headers values
func NewGetOrganizationalUnitInventoryListsOK() *GetOrganizationalUnitInventoryListsOK {
	return &GetOrganizationalUnitInventoryListsOK{}
}

/*GetOrganizationalUnitInventoryListsOK handles this case with default header values.

successful operation
*/
type GetOrganizationalUnitInventoryListsOK struct {
	Payload *models.ResultListInventoryList
}

func (o *GetOrganizationalUnitInventoryListsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationalUnitInventoryListsOK) GetPayload() *models.ResultListInventoryList {
	return o.Payload
}

func (o *GetOrganizationalUnitInventoryListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListInventoryList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitInventoryListsNoContent creates a GetOrganizationalUnitInventoryListsNoContent with default headers values
func NewGetOrganizationalUnitInventoryListsNoContent() *GetOrganizationalUnitInventoryListsNoContent {
	return &GetOrganizationalUnitInventoryListsNoContent{}
}

/*GetOrganizationalUnitInventoryListsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetOrganizationalUnitInventoryListsNoContent struct {
}

func (o *GetOrganizationalUnitInventoryListsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsNoContent ", 204)
}

func (o *GetOrganizationalUnitInventoryListsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationalUnitInventoryListsBadRequest creates a GetOrganizationalUnitInventoryListsBadRequest with default headers values
func NewGetOrganizationalUnitInventoryListsBadRequest() *GetOrganizationalUnitInventoryListsBadRequest {
	return &GetOrganizationalUnitInventoryListsBadRequest{}
}

/*GetOrganizationalUnitInventoryListsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetOrganizationalUnitInventoryListsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetOrganizationalUnitInventoryListsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationalUnitInventoryListsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetOrganizationalUnitInventoryListsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitInventoryListsUnauthorized creates a GetOrganizationalUnitInventoryListsUnauthorized with default headers values
func NewGetOrganizationalUnitInventoryListsUnauthorized() *GetOrganizationalUnitInventoryListsUnauthorized {
	return &GetOrganizationalUnitInventoryListsUnauthorized{}
}

/*GetOrganizationalUnitInventoryListsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetOrganizationalUnitInventoryListsUnauthorized struct {
}

func (o *GetOrganizationalUnitInventoryListsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsUnauthorized ", 401)
}

func (o *GetOrganizationalUnitInventoryListsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrganizationalUnitInventoryListsForbidden creates a GetOrganizationalUnitInventoryListsForbidden with default headers values
func NewGetOrganizationalUnitInventoryListsForbidden() *GetOrganizationalUnitInventoryListsForbidden {
	return &GetOrganizationalUnitInventoryListsForbidden{}
}

/*GetOrganizationalUnitInventoryListsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetOrganizationalUnitInventoryListsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetOrganizationalUnitInventoryListsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationalUnitInventoryListsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetOrganizationalUnitInventoryListsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitInventoryListsNotFound creates a GetOrganizationalUnitInventoryListsNotFound with default headers values
func NewGetOrganizationalUnitInventoryListsNotFound() *GetOrganizationalUnitInventoryListsNotFound {
	return &GetOrganizationalUnitInventoryListsNotFound{}
}

/*GetOrganizationalUnitInventoryListsNotFound handles this case with default header values.

Object not found
*/
type GetOrganizationalUnitInventoryListsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetOrganizationalUnitInventoryListsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationalUnitInventoryListsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetOrganizationalUnitInventoryListsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationalUnitInventoryListsTooManyRequests creates a GetOrganizationalUnitInventoryListsTooManyRequests with default headers values
func NewGetOrganizationalUnitInventoryListsTooManyRequests() *GetOrganizationalUnitInventoryListsTooManyRequests {
	return &GetOrganizationalUnitInventoryListsTooManyRequests{}
}

/*GetOrganizationalUnitInventoryListsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetOrganizationalUnitInventoryListsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetOrganizationalUnitInventoryListsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists][%d] getOrganizationalUnitInventoryListsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrganizationalUnitInventoryListsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetOrganizationalUnitInventoryListsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
