// Code generated by go-swagger; DO NOT EDIT.

package points_of_sale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// AddPointOfSaleReceiptsReader is a Reader for the AddPointOfSaleReceipts structure.
type AddPointOfSaleReceiptsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPointOfSaleReceiptsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddPointOfSaleReceiptsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPointOfSaleReceiptsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddPointOfSaleReceiptsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddPointOfSaleReceiptsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddPointOfSaleReceiptsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddPointOfSaleReceiptsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddPointOfSaleReceiptsOK creates a AddPointOfSaleReceiptsOK with default headers values
func NewAddPointOfSaleReceiptsOK() *AddPointOfSaleReceiptsOK {
	return &AddPointOfSaleReceiptsOK{}
}

/*AddPointOfSaleReceiptsOK handles this case with default header values.

successful operation
*/
type AddPointOfSaleReceiptsOK struct {
	Payload []*models.AddOrUpdateResult
}

func (o *AddPointOfSaleReceiptsOK) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] addPointOfSaleReceiptsOK  %+v", 200, o.Payload)
}

func (o *AddPointOfSaleReceiptsOK) GetPayload() []*models.AddOrUpdateResult {
	return o.Payload
}

func (o *AddPointOfSaleReceiptsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPointOfSaleReceiptsBadRequest creates a AddPointOfSaleReceiptsBadRequest with default headers values
func NewAddPointOfSaleReceiptsBadRequest() *AddPointOfSaleReceiptsBadRequest {
	return &AddPointOfSaleReceiptsBadRequest{}
}

/*AddPointOfSaleReceiptsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type AddPointOfSaleReceiptsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *AddPointOfSaleReceiptsBadRequest) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] addPointOfSaleReceiptsBadRequest  %+v", 400, o.Payload)
}

func (o *AddPointOfSaleReceiptsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *AddPointOfSaleReceiptsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPointOfSaleReceiptsUnauthorized creates a AddPointOfSaleReceiptsUnauthorized with default headers values
func NewAddPointOfSaleReceiptsUnauthorized() *AddPointOfSaleReceiptsUnauthorized {
	return &AddPointOfSaleReceiptsUnauthorized{}
}

/*AddPointOfSaleReceiptsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type AddPointOfSaleReceiptsUnauthorized struct {
}

func (o *AddPointOfSaleReceiptsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] addPointOfSaleReceiptsUnauthorized ", 401)
}

func (o *AddPointOfSaleReceiptsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPointOfSaleReceiptsForbidden creates a AddPointOfSaleReceiptsForbidden with default headers values
func NewAddPointOfSaleReceiptsForbidden() *AddPointOfSaleReceiptsForbidden {
	return &AddPointOfSaleReceiptsForbidden{}
}

/*AddPointOfSaleReceiptsForbidden handles this case with default header values.

Requested action is not allowed
*/
type AddPointOfSaleReceiptsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *AddPointOfSaleReceiptsForbidden) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] addPointOfSaleReceiptsForbidden  %+v", 403, o.Payload)
}

func (o *AddPointOfSaleReceiptsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *AddPointOfSaleReceiptsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPointOfSaleReceiptsNotFound creates a AddPointOfSaleReceiptsNotFound with default headers values
func NewAddPointOfSaleReceiptsNotFound() *AddPointOfSaleReceiptsNotFound {
	return &AddPointOfSaleReceiptsNotFound{}
}

/*AddPointOfSaleReceiptsNotFound handles this case with default header values.

Object not found
*/
type AddPointOfSaleReceiptsNotFound struct {
	Payload *models.NotFoundError
}

func (o *AddPointOfSaleReceiptsNotFound) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] addPointOfSaleReceiptsNotFound  %+v", 404, o.Payload)
}

func (o *AddPointOfSaleReceiptsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *AddPointOfSaleReceiptsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPointOfSaleReceiptsTooManyRequests creates a AddPointOfSaleReceiptsTooManyRequests with default headers values
func NewAddPointOfSaleReceiptsTooManyRequests() *AddPointOfSaleReceiptsTooManyRequests {
	return &AddPointOfSaleReceiptsTooManyRequests{}
}

/*AddPointOfSaleReceiptsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type AddPointOfSaleReceiptsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *AddPointOfSaleReceiptsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] addPointOfSaleReceiptsTooManyRequests  %+v", 429, o.Payload)
}

func (o *AddPointOfSaleReceiptsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *AddPointOfSaleReceiptsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
