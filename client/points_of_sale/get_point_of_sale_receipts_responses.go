// Code generated by go-swagger; DO NOT EDIT.

package points_of_sale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetPointOfSaleReceiptsReader is a Reader for the GetPointOfSaleReceipts structure.
type GetPointOfSaleReceiptsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPointOfSaleReceiptsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPointOfSaleReceiptsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetPointOfSaleReceiptsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPointOfSaleReceiptsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPointOfSaleReceiptsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPointOfSaleReceiptsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPointOfSaleReceiptsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPointOfSaleReceiptsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPointOfSaleReceiptsOK creates a GetPointOfSaleReceiptsOK with default headers values
func NewGetPointOfSaleReceiptsOK() *GetPointOfSaleReceiptsOK {
	return &GetPointOfSaleReceiptsOK{}
}

/*GetPointOfSaleReceiptsOK handles this case with default header values.

successful operation
*/
type GetPointOfSaleReceiptsOK struct {
	Payload *models.ResultListReceipt
}

func (o *GetPointOfSaleReceiptsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsOK  %+v", 200, o.Payload)
}

func (o *GetPointOfSaleReceiptsOK) GetPayload() *models.ResultListReceipt {
	return o.Payload
}

func (o *GetPointOfSaleReceiptsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListReceipt)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPointOfSaleReceiptsNoContent creates a GetPointOfSaleReceiptsNoContent with default headers values
func NewGetPointOfSaleReceiptsNoContent() *GetPointOfSaleReceiptsNoContent {
	return &GetPointOfSaleReceiptsNoContent{}
}

/*GetPointOfSaleReceiptsNoContent handles this case with default header values.

Request successful, but the list is empty. Either there is in general no object on the list or a set filter/restriction in querystring doesn't match any object.
*/
type GetPointOfSaleReceiptsNoContent struct {
}

func (o *GetPointOfSaleReceiptsNoContent) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsNoContent ", 204)
}

func (o *GetPointOfSaleReceiptsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPointOfSaleReceiptsBadRequest creates a GetPointOfSaleReceiptsBadRequest with default headers values
func NewGetPointOfSaleReceiptsBadRequest() *GetPointOfSaleReceiptsBadRequest {
	return &GetPointOfSaleReceiptsBadRequest{}
}

/*GetPointOfSaleReceiptsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetPointOfSaleReceiptsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetPointOfSaleReceiptsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsBadRequest  %+v", 400, o.Payload)
}

func (o *GetPointOfSaleReceiptsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetPointOfSaleReceiptsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPointOfSaleReceiptsUnauthorized creates a GetPointOfSaleReceiptsUnauthorized with default headers values
func NewGetPointOfSaleReceiptsUnauthorized() *GetPointOfSaleReceiptsUnauthorized {
	return &GetPointOfSaleReceiptsUnauthorized{}
}

/*GetPointOfSaleReceiptsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetPointOfSaleReceiptsUnauthorized struct {
}

func (o *GetPointOfSaleReceiptsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsUnauthorized ", 401)
}

func (o *GetPointOfSaleReceiptsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPointOfSaleReceiptsForbidden creates a GetPointOfSaleReceiptsForbidden with default headers values
func NewGetPointOfSaleReceiptsForbidden() *GetPointOfSaleReceiptsForbidden {
	return &GetPointOfSaleReceiptsForbidden{}
}

/*GetPointOfSaleReceiptsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetPointOfSaleReceiptsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetPointOfSaleReceiptsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsForbidden  %+v", 403, o.Payload)
}

func (o *GetPointOfSaleReceiptsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetPointOfSaleReceiptsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPointOfSaleReceiptsNotFound creates a GetPointOfSaleReceiptsNotFound with default headers values
func NewGetPointOfSaleReceiptsNotFound() *GetPointOfSaleReceiptsNotFound {
	return &GetPointOfSaleReceiptsNotFound{}
}

/*GetPointOfSaleReceiptsNotFound handles this case with default header values.

Object not found
*/
type GetPointOfSaleReceiptsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetPointOfSaleReceiptsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsNotFound  %+v", 404, o.Payload)
}

func (o *GetPointOfSaleReceiptsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetPointOfSaleReceiptsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPointOfSaleReceiptsTooManyRequests creates a GetPointOfSaleReceiptsTooManyRequests with default headers values
func NewGetPointOfSaleReceiptsTooManyRequests() *GetPointOfSaleReceiptsTooManyRequests {
	return &GetPointOfSaleReceiptsTooManyRequests{}
}

/*GetPointOfSaleReceiptsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetPointOfSaleReceiptsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetPointOfSaleReceiptsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts][%d] getPointOfSaleReceiptsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPointOfSaleReceiptsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetPointOfSaleReceiptsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
