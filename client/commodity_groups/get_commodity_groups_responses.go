// Code generated by go-swagger; DO NOT EDIT.

package commodity_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetCommodityGroupsReader is a Reader for the GetCommodityGroups structure.
type GetCommodityGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommodityGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCommodityGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCommodityGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCommodityGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCommodityGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCommodityGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCommodityGroupsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCommodityGroupsOK creates a GetCommodityGroupsOK with default headers values
func NewGetCommodityGroupsOK() *GetCommodityGroupsOK {
	return &GetCommodityGroupsOK{}
}

/*GetCommodityGroupsOK handles this case with default header values.

successful operation
*/
type GetCommodityGroupsOK struct {
	Payload *models.ResultListCommodityGroup
}

func (o *GetCommodityGroupsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/commodityGroups][%d] getCommodityGroupsOK  %+v", 200, o.Payload)
}

func (o *GetCommodityGroupsOK) GetPayload() *models.ResultListCommodityGroup {
	return o.Payload
}

func (o *GetCommodityGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResultListCommodityGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommodityGroupsBadRequest creates a GetCommodityGroupsBadRequest with default headers values
func NewGetCommodityGroupsBadRequest() *GetCommodityGroupsBadRequest {
	return &GetCommodityGroupsBadRequest{}
}

/*GetCommodityGroupsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetCommodityGroupsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetCommodityGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/commodityGroups][%d] getCommodityGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCommodityGroupsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetCommodityGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommodityGroupsUnauthorized creates a GetCommodityGroupsUnauthorized with default headers values
func NewGetCommodityGroupsUnauthorized() *GetCommodityGroupsUnauthorized {
	return &GetCommodityGroupsUnauthorized{}
}

/*GetCommodityGroupsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetCommodityGroupsUnauthorized struct {
}

func (o *GetCommodityGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/commodityGroups][%d] getCommodityGroupsUnauthorized ", 401)
}

func (o *GetCommodityGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCommodityGroupsForbidden creates a GetCommodityGroupsForbidden with default headers values
func NewGetCommodityGroupsForbidden() *GetCommodityGroupsForbidden {
	return &GetCommodityGroupsForbidden{}
}

/*GetCommodityGroupsForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetCommodityGroupsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetCommodityGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/commodityGroups][%d] getCommodityGroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetCommodityGroupsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetCommodityGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommodityGroupsNotFound creates a GetCommodityGroupsNotFound with default headers values
func NewGetCommodityGroupsNotFound() *GetCommodityGroupsNotFound {
	return &GetCommodityGroupsNotFound{}
}

/*GetCommodityGroupsNotFound handles this case with default header values.

Object not found
*/
type GetCommodityGroupsNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetCommodityGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/commodityGroups][%d] getCommodityGroupsNotFound  %+v", 404, o.Payload)
}

func (o *GetCommodityGroupsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetCommodityGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommodityGroupsTooManyRequests creates a GetCommodityGroupsTooManyRequests with default headers values
func NewGetCommodityGroupsTooManyRequests() *GetCommodityGroupsTooManyRequests {
	return &GetCommodityGroupsTooManyRequests{}
}

/*GetCommodityGroupsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetCommodityGroupsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetCommodityGroupsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/commodityGroups][%d] getCommodityGroupsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCommodityGroupsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetCommodityGroupsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
