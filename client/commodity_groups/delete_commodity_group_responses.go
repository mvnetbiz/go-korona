// Code generated by go-swagger; DO NOT EDIT.

package commodity_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteCommodityGroupReader is a Reader for the DeleteCommodityGroup structure.
type DeleteCommodityGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCommodityGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCommodityGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCommodityGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteCommodityGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCommodityGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCommodityGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteCommodityGroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCommodityGroupNoContent creates a DeleteCommodityGroupNoContent with default headers values
func NewDeleteCommodityGroupNoContent() *DeleteCommodityGroupNoContent {
	return &DeleteCommodityGroupNoContent{}
}

/*DeleteCommodityGroupNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type DeleteCommodityGroupNoContent struct {
}

func (o *DeleteCommodityGroupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}][%d] deleteCommodityGroupNoContent ", 204)
}

func (o *DeleteCommodityGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCommodityGroupBadRequest creates a DeleteCommodityGroupBadRequest with default headers values
func NewDeleteCommodityGroupBadRequest() *DeleteCommodityGroupBadRequest {
	return &DeleteCommodityGroupBadRequest{}
}

/*DeleteCommodityGroupBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteCommodityGroupBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteCommodityGroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}][%d] deleteCommodityGroupBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCommodityGroupBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteCommodityGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCommodityGroupUnauthorized creates a DeleteCommodityGroupUnauthorized with default headers values
func NewDeleteCommodityGroupUnauthorized() *DeleteCommodityGroupUnauthorized {
	return &DeleteCommodityGroupUnauthorized{}
}

/*DeleteCommodityGroupUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteCommodityGroupUnauthorized struct {
}

func (o *DeleteCommodityGroupUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}][%d] deleteCommodityGroupUnauthorized ", 401)
}

func (o *DeleteCommodityGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCommodityGroupForbidden creates a DeleteCommodityGroupForbidden with default headers values
func NewDeleteCommodityGroupForbidden() *DeleteCommodityGroupForbidden {
	return &DeleteCommodityGroupForbidden{}
}

/*DeleteCommodityGroupForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteCommodityGroupForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteCommodityGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}][%d] deleteCommodityGroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCommodityGroupForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteCommodityGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCommodityGroupNotFound creates a DeleteCommodityGroupNotFound with default headers values
func NewDeleteCommodityGroupNotFound() *DeleteCommodityGroupNotFound {
	return &DeleteCommodityGroupNotFound{}
}

/*DeleteCommodityGroupNotFound handles this case with default header values.

Object not found
*/
type DeleteCommodityGroupNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteCommodityGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}][%d] deleteCommodityGroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCommodityGroupNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteCommodityGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCommodityGroupTooManyRequests creates a DeleteCommodityGroupTooManyRequests with default headers values
func NewDeleteCommodityGroupTooManyRequests() *DeleteCommodityGroupTooManyRequests {
	return &DeleteCommodityGroupTooManyRequests{}
}

/*DeleteCommodityGroupTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteCommodityGroupTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteCommodityGroupTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}][%d] deleteCommodityGroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteCommodityGroupTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteCommodityGroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
