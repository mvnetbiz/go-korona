// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// CancelAttendanceReader is a Reader for the CancelAttendance structure.
type CancelAttendanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelAttendanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCancelAttendanceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCancelAttendanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCancelAttendanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCancelAttendanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCancelAttendanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCancelAttendanceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCancelAttendanceNoContent creates a CancelAttendanceNoContent with default headers values
func NewCancelAttendanceNoContent() *CancelAttendanceNoContent {
	return &CancelAttendanceNoContent{}
}

/*CancelAttendanceNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type CancelAttendanceNoContent struct {
}

func (o *CancelAttendanceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/attendance/{attendanceId}][%d] cancelAttendanceNoContent ", 204)
}

func (o *CancelAttendanceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelAttendanceBadRequest creates a CancelAttendanceBadRequest with default headers values
func NewCancelAttendanceBadRequest() *CancelAttendanceBadRequest {
	return &CancelAttendanceBadRequest{}
}

/*CancelAttendanceBadRequest handles this case with default header values.

Malformed querystring or model
*/
type CancelAttendanceBadRequest struct {
	Payload *models.BadRequestError
}

func (o *CancelAttendanceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/attendance/{attendanceId}][%d] cancelAttendanceBadRequest  %+v", 400, o.Payload)
}

func (o *CancelAttendanceBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *CancelAttendanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelAttendanceUnauthorized creates a CancelAttendanceUnauthorized with default headers values
func NewCancelAttendanceUnauthorized() *CancelAttendanceUnauthorized {
	return &CancelAttendanceUnauthorized{}
}

/*CancelAttendanceUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type CancelAttendanceUnauthorized struct {
}

func (o *CancelAttendanceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/attendance/{attendanceId}][%d] cancelAttendanceUnauthorized ", 401)
}

func (o *CancelAttendanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCancelAttendanceForbidden creates a CancelAttendanceForbidden with default headers values
func NewCancelAttendanceForbidden() *CancelAttendanceForbidden {
	return &CancelAttendanceForbidden{}
}

/*CancelAttendanceForbidden handles this case with default header values.

Requested action is not allowed
*/
type CancelAttendanceForbidden struct {
	Payload *models.ForbiddenError
}

func (o *CancelAttendanceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/attendance/{attendanceId}][%d] cancelAttendanceForbidden  %+v", 403, o.Payload)
}

func (o *CancelAttendanceForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *CancelAttendanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelAttendanceNotFound creates a CancelAttendanceNotFound with default headers values
func NewCancelAttendanceNotFound() *CancelAttendanceNotFound {
	return &CancelAttendanceNotFound{}
}

/*CancelAttendanceNotFound handles this case with default header values.

Object not found
*/
type CancelAttendanceNotFound struct {
	Payload *models.NotFoundError
}

func (o *CancelAttendanceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/attendance/{attendanceId}][%d] cancelAttendanceNotFound  %+v", 404, o.Payload)
}

func (o *CancelAttendanceNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *CancelAttendanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelAttendanceTooManyRequests creates a CancelAttendanceTooManyRequests with default headers values
func NewCancelAttendanceTooManyRequests() *CancelAttendanceTooManyRequests {
	return &CancelAttendanceTooManyRequests{}
}

/*CancelAttendanceTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type CancelAttendanceTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *CancelAttendanceTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/attendance/{attendanceId}][%d] cancelAttendanceTooManyRequests  %+v", 429, o.Payload)
}

func (o *CancelAttendanceTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *CancelAttendanceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
