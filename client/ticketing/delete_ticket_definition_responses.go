// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteTicketDefinitionReader is a Reader for the DeleteTicketDefinition structure.
type DeleteTicketDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTicketDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTicketDefinitionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTicketDefinitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTicketDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTicketDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTicketDefinitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteTicketDefinitionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTicketDefinitionNoContent creates a DeleteTicketDefinitionNoContent with default headers values
func NewDeleteTicketDefinitionNoContent() *DeleteTicketDefinitionNoContent {
	return &DeleteTicketDefinitionNoContent{}
}

/*DeleteTicketDefinitionNoContent handles this case with default header values.

Request successful, delete on single resource does not return any content
*/
type DeleteTicketDefinitionNoContent struct {
}

func (o *DeleteTicketDefinitionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}][%d] deleteTicketDefinitionNoContent ", 204)
}

func (o *DeleteTicketDefinitionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTicketDefinitionBadRequest creates a DeleteTicketDefinitionBadRequest with default headers values
func NewDeleteTicketDefinitionBadRequest() *DeleteTicketDefinitionBadRequest {
	return &DeleteTicketDefinitionBadRequest{}
}

/*DeleteTicketDefinitionBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteTicketDefinitionBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteTicketDefinitionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}][%d] deleteTicketDefinitionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTicketDefinitionBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteTicketDefinitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionUnauthorized creates a DeleteTicketDefinitionUnauthorized with default headers values
func NewDeleteTicketDefinitionUnauthorized() *DeleteTicketDefinitionUnauthorized {
	return &DeleteTicketDefinitionUnauthorized{}
}

/*DeleteTicketDefinitionUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteTicketDefinitionUnauthorized struct {
}

func (o *DeleteTicketDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}][%d] deleteTicketDefinitionUnauthorized ", 401)
}

func (o *DeleteTicketDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTicketDefinitionForbidden creates a DeleteTicketDefinitionForbidden with default headers values
func NewDeleteTicketDefinitionForbidden() *DeleteTicketDefinitionForbidden {
	return &DeleteTicketDefinitionForbidden{}
}

/*DeleteTicketDefinitionForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteTicketDefinitionForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteTicketDefinitionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}][%d] deleteTicketDefinitionForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTicketDefinitionForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteTicketDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionNotFound creates a DeleteTicketDefinitionNotFound with default headers values
func NewDeleteTicketDefinitionNotFound() *DeleteTicketDefinitionNotFound {
	return &DeleteTicketDefinitionNotFound{}
}

/*DeleteTicketDefinitionNotFound handles this case with default header values.

Object not found
*/
type DeleteTicketDefinitionNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteTicketDefinitionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}][%d] deleteTicketDefinitionNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTicketDefinitionNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteTicketDefinitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionTooManyRequests creates a DeleteTicketDefinitionTooManyRequests with default headers values
func NewDeleteTicketDefinitionTooManyRequests() *DeleteTicketDefinitionTooManyRequests {
	return &DeleteTicketDefinitionTooManyRequests{}
}

/*DeleteTicketDefinitionTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteTicketDefinitionTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteTicketDefinitionTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}][%d] deleteTicketDefinitionTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTicketDefinitionTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteTicketDefinitionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
