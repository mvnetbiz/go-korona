// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// DeleteTicketDefinitionsReader is a Reader for the DeleteTicketDefinitions structure.
type DeleteTicketDefinitionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTicketDefinitionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTicketDefinitionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTicketDefinitionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTicketDefinitionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTicketDefinitionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTicketDefinitionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteTicketDefinitionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteTicketDefinitionsOK creates a DeleteTicketDefinitionsOK with default headers values
func NewDeleteTicketDefinitionsOK() *DeleteTicketDefinitionsOK {
	return &DeleteTicketDefinitionsOK{}
}

/*DeleteTicketDefinitionsOK handles this case with default header values.

successful operation
*/
type DeleteTicketDefinitionsOK struct {
	Payload []*models.AddOrUpdateResult
}

func (o *DeleteTicketDefinitionsOK) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions][%d] deleteTicketDefinitionsOK  %+v", 200, o.Payload)
}

func (o *DeleteTicketDefinitionsOK) GetPayload() []*models.AddOrUpdateResult {
	return o.Payload
}

func (o *DeleteTicketDefinitionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionsBadRequest creates a DeleteTicketDefinitionsBadRequest with default headers values
func NewDeleteTicketDefinitionsBadRequest() *DeleteTicketDefinitionsBadRequest {
	return &DeleteTicketDefinitionsBadRequest{}
}

/*DeleteTicketDefinitionsBadRequest handles this case with default header values.

Malformed querystring or model
*/
type DeleteTicketDefinitionsBadRequest struct {
	Payload *models.BadRequestError
}

func (o *DeleteTicketDefinitionsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions][%d] deleteTicketDefinitionsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteTicketDefinitionsBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *DeleteTicketDefinitionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionsUnauthorized creates a DeleteTicketDefinitionsUnauthorized with default headers values
func NewDeleteTicketDefinitionsUnauthorized() *DeleteTicketDefinitionsUnauthorized {
	return &DeleteTicketDefinitionsUnauthorized{}
}

/*DeleteTicketDefinitionsUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type DeleteTicketDefinitionsUnauthorized struct {
}

func (o *DeleteTicketDefinitionsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions][%d] deleteTicketDefinitionsUnauthorized ", 401)
}

func (o *DeleteTicketDefinitionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTicketDefinitionsForbidden creates a DeleteTicketDefinitionsForbidden with default headers values
func NewDeleteTicketDefinitionsForbidden() *DeleteTicketDefinitionsForbidden {
	return &DeleteTicketDefinitionsForbidden{}
}

/*DeleteTicketDefinitionsForbidden handles this case with default header values.

Requested action is not allowed
*/
type DeleteTicketDefinitionsForbidden struct {
	Payload *models.ForbiddenError
}

func (o *DeleteTicketDefinitionsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions][%d] deleteTicketDefinitionsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTicketDefinitionsForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *DeleteTicketDefinitionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionsNotFound creates a DeleteTicketDefinitionsNotFound with default headers values
func NewDeleteTicketDefinitionsNotFound() *DeleteTicketDefinitionsNotFound {
	return &DeleteTicketDefinitionsNotFound{}
}

/*DeleteTicketDefinitionsNotFound handles this case with default header values.

Object not found
*/
type DeleteTicketDefinitionsNotFound struct {
	Payload *models.NotFoundError
}

func (o *DeleteTicketDefinitionsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions][%d] deleteTicketDefinitionsNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTicketDefinitionsNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *DeleteTicketDefinitionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTicketDefinitionsTooManyRequests creates a DeleteTicketDefinitionsTooManyRequests with default headers values
func NewDeleteTicketDefinitionsTooManyRequests() *DeleteTicketDefinitionsTooManyRequests {
	return &DeleteTicketDefinitionsTooManyRequests{}
}

/*DeleteTicketDefinitionsTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type DeleteTicketDefinitionsTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *DeleteTicketDefinitionsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{koronaAccountId}/ticketDefinitions][%d] deleteTicketDefinitionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTicketDefinitionsTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *DeleteTicketDefinitionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
