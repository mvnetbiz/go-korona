// Code generated by go-swagger; DO NOT EDIT.

package ticketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mvnetbiz/go-korona/models"
)

// GetEntryGateReader is a Reader for the GetEntryGate structure.
type GetEntryGateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEntryGateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEntryGateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEntryGateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEntryGateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEntryGateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEntryGateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetEntryGateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEntryGateOK creates a GetEntryGateOK with default headers values
func NewGetEntryGateOK() *GetEntryGateOK {
	return &GetEntryGateOK{}
}

/*GetEntryGateOK handles this case with default header values.

successful operation
*/
type GetEntryGateOK struct {
	Payload *models.EntryGate
}

func (o *GetEntryGateOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/entryGates/{entryGateId}][%d] getEntryGateOK  %+v", 200, o.Payload)
}

func (o *GetEntryGateOK) GetPayload() *models.EntryGate {
	return o.Payload
}

func (o *GetEntryGateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EntryGate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntryGateBadRequest creates a GetEntryGateBadRequest with default headers values
func NewGetEntryGateBadRequest() *GetEntryGateBadRequest {
	return &GetEntryGateBadRequest{}
}

/*GetEntryGateBadRequest handles this case with default header values.

Malformed querystring or model
*/
type GetEntryGateBadRequest struct {
	Payload *models.BadRequestError
}

func (o *GetEntryGateBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/entryGates/{entryGateId}][%d] getEntryGateBadRequest  %+v", 400, o.Payload)
}

func (o *GetEntryGateBadRequest) GetPayload() *models.BadRequestError {
	return o.Payload
}

func (o *GetEntryGateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntryGateUnauthorized creates a GetEntryGateUnauthorized with default headers values
func NewGetEntryGateUnauthorized() *GetEntryGateUnauthorized {
	return &GetEntryGateUnauthorized{}
}

/*GetEntryGateUnauthorized handles this case with default header values.

Missing or invalid http-authentication
*/
type GetEntryGateUnauthorized struct {
}

func (o *GetEntryGateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/entryGates/{entryGateId}][%d] getEntryGateUnauthorized ", 401)
}

func (o *GetEntryGateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEntryGateForbidden creates a GetEntryGateForbidden with default headers values
func NewGetEntryGateForbidden() *GetEntryGateForbidden {
	return &GetEntryGateForbidden{}
}

/*GetEntryGateForbidden handles this case with default header values.

Requested action is not allowed
*/
type GetEntryGateForbidden struct {
	Payload *models.ForbiddenError
}

func (o *GetEntryGateForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/entryGates/{entryGateId}][%d] getEntryGateForbidden  %+v", 403, o.Payload)
}

func (o *GetEntryGateForbidden) GetPayload() *models.ForbiddenError {
	return o.Payload
}

func (o *GetEntryGateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ForbiddenError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntryGateNotFound creates a GetEntryGateNotFound with default headers values
func NewGetEntryGateNotFound() *GetEntryGateNotFound {
	return &GetEntryGateNotFound{}
}

/*GetEntryGateNotFound handles this case with default header values.

Object not found
*/
type GetEntryGateNotFound struct {
	Payload *models.NotFoundError
}

func (o *GetEntryGateNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/entryGates/{entryGateId}][%d] getEntryGateNotFound  %+v", 404, o.Payload)
}

func (o *GetEntryGateNotFound) GetPayload() *models.NotFoundError {
	return o.Payload
}

func (o *GetEntryGateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEntryGateTooManyRequests creates a GetEntryGateTooManyRequests with default headers values
func NewGetEntryGateTooManyRequests() *GetEntryGateTooManyRequests {
	return &GetEntryGateTooManyRequests{}
}

/*GetEntryGateTooManyRequests handles this case with default header values.

Too many requests in a specified period
*/
type GetEntryGateTooManyRequests struct {
	Payload *models.TooManyRequestsError
}

func (o *GetEntryGateTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /accounts/{koronaAccountId}/entryGates/{entryGateId}][%d] getEntryGateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetEntryGateTooManyRequests) GetPayload() *models.TooManyRequestsError {
	return o.Payload
}

func (o *GetEntryGateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TooManyRequestsError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
