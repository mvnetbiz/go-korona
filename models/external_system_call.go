// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ExternalSystemCall external system call
//
// swagger:model ExternalSystemCall
type ExternalSystemCall struct {

	// indicates whether the object is active for use or not
	// Read Only: true
	Active *bool `json:"active,omitempty"`

	// connect timeout millis
	ConnectTimeoutMillis int32 `json:"connectTimeoutMillis,omitempty"`

	// customer display Url
	CustomerDisplayURL string `json:"customerDisplayUrl,omitempty"`

	// display Url
	DisplayURL string `json:"displayUrl,omitempty"`

	// display Url post
	DisplayURLPost bool `json:"displayUrlPost,omitempty"`

	// global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
	ID string `json:"id,omitempty"`

	// login
	Login string `json:"login,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// number of the object, like it is set in backoffice; will be removed when active=false
	Number string `json:"number,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// request timeout millis
	RequestTimeoutMillis int32 `json:"requestTimeoutMillis,omitempty"`

	// the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
	// Read Only: true
	Revision int64 `json:"revision,omitempty"`

	// system Url
	SystemURL string `json:"systemUrl,omitempty"`
}

// Validate validates this external system call
func (m *ExternalSystemCall) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ExternalSystemCall) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExternalSystemCall) UnmarshalBinary(b []byte) error {
	var res ExternalSystemCall
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
