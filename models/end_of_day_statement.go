// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EndOfDayStatement end of day statement
//
// swagger:model EndOfDayStatement
type EndOfDayStatement struct {

	// indicates whether the object is active for use or not
	// Read Only: true
	Active *bool `json:"active,omitempty"`

	// finish time
	// Format: date-time
	FinishTime strfmt.DateTime `json:"finishTime,omitempty"`

	// global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
	ID string `json:"id,omitempty"`

	// number of the object, like it is set in backoffice; will be removed when active=false
	Number string `json:"number,omitempty"`

	// receipt count
	ReceiptCount int64 `json:"receiptCount,omitempty"`

	// the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
	// Read Only: true
	Revision int64 `json:"revision,omitempty"`

	// successfully checked
	SuccessfullyChecked bool `json:"successfullyChecked,omitempty"`

	// summaries
	Summaries *EndOfDayStatementSummary `json:"summaries,omitempty"`

	// z count
	ZCount int64 `json:"zCount,omitempty"`
}

// Validate validates this end of day statement
func (m *EndOfDayStatement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFinishTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSummaries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EndOfDayStatement) validateFinishTime(formats strfmt.Registry) error {

	if swag.IsZero(m.FinishTime) { // not required
		return nil
	}

	if err := validate.FormatOf("finishTime", "body", "date-time", m.FinishTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *EndOfDayStatement) validateSummaries(formats strfmt.Registry) error {

	if swag.IsZero(m.Summaries) { // not required
		return nil
	}

	if m.Summaries != nil {
		if err := m.Summaries.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("summaries")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EndOfDayStatement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EndOfDayStatement) UnmarshalBinary(b []byte) error {
	var res EndOfDayStatement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
